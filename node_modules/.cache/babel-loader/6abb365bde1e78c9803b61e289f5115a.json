{"ast":null,"code":"function Momo(rawRequestId, rawOrderInfo, rawAmount, accountId) {\n  //https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\n  //parameters\n  var accessKey = 'F8BBA842ECF85';\n  var secretKey = 'K951B6PE1waDMi640xX08PD3vg6EkVlz';\n  var orderInfo = rawOrderInfo;\n  var partnerCode = 'MOMO';\n  var redirectUrl = 'http://localhost:3000/afterpay';\n  var ipnUrl = 'http://localhost:3000/afterpay';\n  var requestType = \"payWithMethod\";\n  var amount = rawAmount;\n  var orderId = rawRequestId;\n  var requestId = orderId;\n  var extraData = '';\n  var paymentCode = 'T8Qii53fAXyUftPV3m9ysyRhEanUs9KlOPfHgpMR0ON50U10Bh+vZdpJU7VY4z+Z2y77fJHkoDc69scwwzLuW5MzeUKTwPo3ZMaB29imm6YulqnWfTkgzqRaion+EuD7FN9wZ4aXE1+mRt0gHsU193y+yxtRgpmY7SDMU9hCKoQtYyHsfFR5FUAOAKMdw2fzQqpToei3rnaYvZuYaxolprm9+/+WIETnPUDlxCYOiw7vPeaaYQQH0BF0TxyU3zu36ODx980rJvPAgtJzH1gUrlxcSS1HQeQ9ZaVM1eOK/jl8KJm6ijOwErHGbgf/hVymUQG65rHU2MWz9U8QUjvDWA==';\n  var orderGroupId = '';\n  var autoCapture = true;\n  var lang = 'vi'; //before sign HMAC SHA256 with format\n  //accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\n\n  var rawSignature = \"accessKey=\" + accessKey + \"&amount=\" + amount + \"&extraData=\" + extraData + \"&ipnUrl=\" + ipnUrl + \"&orderId=\" + orderId + \"&orderInfo=\" + orderInfo + \"&partnerCode=\" + partnerCode + \"&redirectUrl=\" + redirectUrl + \"&requestId=\" + requestId + \"&requestType=\" + requestType; //puts raw signature\n  //signature\n\n  const crypto = require('crypto');\n\n  var signature = crypto.createHmac('sha256', secretKey).update(rawSignature).digest('hex'); //json object send to MoMo endpoint\n\n  const requestBody = JSON.stringify({\n    partnerCode: partnerCode,\n    partnerName: \"Test\",\n    storeId: \"MomoTestStore\",\n    requestId: requestId,\n    amount: amount,\n    orderId: orderId,\n    orderInfo: orderInfo,\n    redirectUrl: redirectUrl,\n    ipnUrl: ipnUrl,\n    lang: lang,\n    requestType: requestType,\n    autoCapture: autoCapture,\n    extraData: extraData,\n    orderGroupId: orderGroupId,\n    signature: signature,\n    accountId: accountId\n  }); //Create the HTTPS objects\n\n  const https = require('https');\n\n  const options = {\n    hostname: 'test-payment.momo.vn',\n    port: 443,\n    path: '/v2/gateway/api/create',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': Buffer.byteLength(requestBody)\n    }\n  }; //Send the request and get the response\n\n  const req = https.request(options, res => {\n    console.log(`Status: ${res.statusCode}`);\n    console.log(`Headers: ${JSON.stringify(res.headers)}`);\n    res.setEncoding('utf8');\n    res.on('data', body => {\n      console.log('Body: ');\n      console.log(body);\n      console.log('resultCode: ');\n      window.location.href = JSON.parse(body).payUrl;\n    });\n  });\n  req.write(requestBody);\n  req.end();\n}\n\n_c = Momo;\nexport default Momo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Momo\");","map":{"version":3,"names":["Momo","rawRequestId","rawOrderInfo","rawAmount","accountId","accessKey","secretKey","orderInfo","partnerCode","redirectUrl","ipnUrl","requestType","amount","orderId","requestId","extraData","paymentCode","orderGroupId","autoCapture","lang","rawSignature","crypto","require","signature","createHmac","update","digest","requestBody","JSON","stringify","partnerName","storeId","https","options","hostname","port","path","method","headers","Buffer","byteLength","req","request","res","console","log","statusCode","setEncoding","on","body","window","location","href","parse","payUrl","write","end"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/components/pages/Momo/index.js"],"sourcesContent":["function Momo(rawRequestId, rawOrderInfo, rawAmount, accountId) {\r\n    //https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\r\n    //parameters\r\n    var accessKey = 'F8BBA842ECF85';\r\n    var secretKey = 'K951B6PE1waDMi640xX08PD3vg6EkVlz';\r\n    var orderInfo = rawOrderInfo;\r\n    var partnerCode = 'MOMO';\r\n    var redirectUrl = 'http://localhost:3000/afterpay';\r\n    var ipnUrl = 'http://localhost:3000/afterpay';\r\n    var requestType = \"payWithMethod\";\r\n    var amount = rawAmount;\r\n    var orderId = rawRequestId;\r\n    var requestId = orderId;\r\n    var extraData = '';\r\n    var paymentCode = 'T8Qii53fAXyUftPV3m9ysyRhEanUs9KlOPfHgpMR0ON50U10Bh+vZdpJU7VY4z+Z2y77fJHkoDc69scwwzLuW5MzeUKTwPo3ZMaB29imm6YulqnWfTkgzqRaion+EuD7FN9wZ4aXE1+mRt0gHsU193y+yxtRgpmY7SDMU9hCKoQtYyHsfFR5FUAOAKMdw2fzQqpToei3rnaYvZuYaxolprm9+/+WIETnPUDlxCYOiw7vPeaaYQQH0BF0TxyU3zu36ODx980rJvPAgtJzH1gUrlxcSS1HQeQ9ZaVM1eOK/jl8KJm6ijOwErHGbgf/hVymUQG65rHU2MWz9U8QUjvDWA==';\r\n    var orderGroupId = '';\r\n    var autoCapture = true;\r\n    var lang = 'vi';\r\n\r\n    //before sign HMAC SHA256 with format\r\n    //accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\r\n    var rawSignature = \"accessKey=\" + accessKey + \"&amount=\" + amount + \"&extraData=\" + extraData + \"&ipnUrl=\" + ipnUrl + \"&orderId=\" + orderId + \"&orderInfo=\" + orderInfo + \"&partnerCode=\" + partnerCode + \"&redirectUrl=\" + redirectUrl + \"&requestId=\" + requestId + \"&requestType=\" + requestType;\r\n    //puts raw signature\r\n    //signature\r\n    const crypto = require('crypto');\r\n    var signature = crypto.createHmac('sha256', secretKey)\r\n        .update(rawSignature)\r\n        .digest('hex');\r\n    //json object send to MoMo endpoint\r\n    const requestBody = JSON.stringify({\r\n        partnerCode: partnerCode,\r\n        partnerName: \"Test\",\r\n        storeId: \"MomoTestStore\",\r\n        requestId: requestId,\r\n        amount: amount,\r\n        orderId: orderId,\r\n        orderInfo: orderInfo,\r\n        redirectUrl: redirectUrl,\r\n        ipnUrl: ipnUrl,\r\n        lang: lang,\r\n        requestType: requestType,\r\n        autoCapture: autoCapture,\r\n        extraData: extraData,\r\n        orderGroupId: orderGroupId,\r\n        signature: signature,\r\n        accountId: accountId\r\n    });\r\n    //Create the HTTPS objects\r\n    const https = require('https');\r\n    const options = {\r\n        hostname: 'test-payment.momo.vn',\r\n        port: 443,\r\n        path: '/v2/gateway/api/create',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Content-Length': Buffer.byteLength(requestBody)\r\n        }\r\n    }\r\n    //Send the request and get the response\r\n    const req = https.request(options, res => {\r\n        console.log(`Status: ${res.statusCode}`);\r\n        console.log(`Headers: ${JSON.stringify(res.headers)}`);\r\n        res.setEncoding('utf8');\r\n        res.on('data', (body) => {\r\n            console.log('Body: ');\r\n            console.log(body);\r\n            console.log('resultCode: ');\r\n            window.location.href = JSON.parse(body).payUrl\r\n        });\r\n    })\r\n    req.write(requestBody);\r\n    req.end();\r\n}\r\n\r\nexport default Momo"],"mappings":"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"},"metadata":{},"sourceType":"module"}