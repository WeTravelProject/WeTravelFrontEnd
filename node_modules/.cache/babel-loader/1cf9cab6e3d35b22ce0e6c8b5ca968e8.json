{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Hoc ReactJS\\\\wetravelfrontend\\\\src\\\\components\\\\pages\\\\ViewTour\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useState, useEffect, useRef } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { english, vietnamese } from '../../Languages/MenuCreateTour';\nimport GeneralInformationTour from '../GeneralInformationTour';\nimport TourSchedule from '../TourSchedule';\nimport MoreInformationTour from '../MoreInformationTour';\nimport axios from 'axios';\nimport { API_GET_SERVICE_BY_CONDITION, API_GET_DETAIL_TOUR, API_GET_CUSTOMER, API_GET_PARTNER, API_DELETE_TOUR, API_ACTIVE_TOUR, API_UPDATE_TOUR } from \"../../API\";\nimport LoadingDialog from '../../Layout/LoadingDialog';\nimport { ref, listAll, getDownloadURL, deleteObject } from 'firebase/storage';\nimport { storage } from \"../../../firebase/Upload\";\nimport InformationCustomerRegisterTourPrivate from '../InformationCustomerRegisterTourPrivate';\nimport './ViewTour.scss';\nimport ConfirmDialog from '../../Layout/ConfirmDialog';\nimport { toast } from 'react-toastify';\nimport { english as englishTable, vietnamese as vietnameseTable } from '../../Languages/TableTour';\nimport { english as englishConfirm, vietnamese as vietnameseConfirm } from '../../Languages/MoreInformationTour';\nimport { UploadImage } from '../../../firebase/UploadImage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ViewTour(_ref) {\n  _s();\n\n  let {\n    languageSelected\n  } = _ref;\n  const navigate = useNavigate();\n  const [getDataComplete, setGetDataComplete] = useState(false);\n  const [optionSelected, setOptionSelected] = useState(0);\n  const [showLoading, setShowLoading] = useState(false);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [titleConfirm, setTitleConfirm] = useState('asd');\n  const [contentConfirm, setContentConfirm] = useState('asd');\n  const callbackConfirm = useRef(() => {});\n  const [isRed, setIsRed] = useState(true);\n  const [textOk, setTextOk] = useState('Ok');\n  const [textCancel, setTextCancel] = useState('Cancel');\n  const languageList = languageSelected === 'EN' ? englishConfirm : vietnameseConfirm;\n  const table = languageSelected === 'EN' ? englishTable : vietnameseTable;\n  const menuCreateTour = languageSelected === 'EN' ? english : vietnamese;\n  const titleLanguage = languageSelected === 'EN' ? 'Tour information' : 'ThÃ´ng tin tour';\n  const pathname = window.location.pathname;\n  const id = useLocation().state.id;\n  const [serviceList, setServiceList] = useState([]);\n  const [userList, setUserList] = useState([]);\n  useEffect(() => {\n    let services = [];\n    axios.get(API_GET_SERVICE_BY_CONDITION, {\n      params: {\n        isActive: 1,\n        isBlock: window.location.pathname === '/admin/view-detail-tour' ? -1 : 0,\n        status: 1\n      }\n    }).then(response => {\n      response.data.data.map(item => {\n        let service = {\n          value: item.serviceId,\n          label: item.serviceName\n        };\n        services.push(service);\n      });\n      let customers = [];\n      axios.get(API_GET_CUSTOMER, {\n        params: {\n          page: 1,\n          size: 99999\n        }\n      }).then(res => {\n        res.data.data.content.map(itemCus => {\n          let cus = {\n            value: itemCus.accountId,\n            label: itemCus.email\n          };\n          customers.push(cus);\n        });\n        axios.get(API_GET_PARTNER, {\n          params: {\n            page: 1,\n            size: 99999\n          }\n        }).then(resPart => {\n          resPart.data.data.content.map(itemCus => {\n            let cus = {\n              value: itemCus.accountId,\n              label: itemCus.email\n            };\n            customers.push(cus);\n          });\n          setUserList([...customers]);\n        }).catch(() => {\n          setUserList([...customers]);\n        });\n      }).catch(e => {\n        axios.get(API_GET_PARTNER, {\n          params: {\n            page: 1,\n            size: 99999\n          }\n        }).then(resPart => {\n          resPart.data.data.content.map(itemCus => {\n            let cus = {\n              value: itemCus.accountId,\n              label: itemCus.email\n            };\n            customers.push(cus);\n          });\n          setUserList([...customers]);\n        }).catch(() => {\n          setUserList([...customers]);\n        });\n      });\n      setServiceList([...services]);\n    }).catch(() => {\n      let customers = [];\n      axios.get(API_GET_CUSTOMER, {\n        params: {\n          page: 1,\n          size: 99999\n        }\n      }).then(res => {\n        res.data.data.content.map(itemCus => {\n          let cus = {\n            value: itemCus.accountId,\n            label: itemCus.email\n          };\n          customers.push(cus);\n        });\n        axios.get(API_GET_PARTNER, {\n          params: {\n            page: 1,\n            size: 99999\n          }\n        }).then(resPart => {\n          resPart.data.data.content.map(itemCus => {\n            let cus = {\n              value: itemCus.accountId,\n              label: itemCus.email\n            };\n            customers.push(cus);\n          });\n          setUserList([...customers]);\n        }).catch(() => {\n          setUserList([...customers]);\n        });\n      }).catch(e => {\n        axios.get(API_GET_PARTNER, {\n          params: {\n            page: 1,\n            size: 99999\n          }\n        }).then(resPart => {\n          resPart.data.data.content.map(itemCus => {\n            let cus = {\n              value: itemCus.accountId,\n              label: itemCus.email\n            };\n            customers.push(cus);\n          });\n          setUserList([...customers]);\n        }).catch(() => {\n          setUserList([...customers]);\n        });\n      });\n      setServiceList([...services]);\n    });\n  }, []);\n  const [tour, setTour] = useState();\n  const [tourSchedule, setTourSchedule] = useState([]);\n  const [customerRegisted, setCustomerRegisted] = useState({\n    numberOfAdult: 1,\n    numberOfChildren: 0,\n    fullName: '',\n    phone: '',\n    emailContact: '',\n    idCard: '',\n    dateOfIssue: '',\n    placeOfIssue: ''\n  });\n  useEffect(() => {\n    axios.get(`${API_GET_DETAIL_TOUR}/${id}`).then(res => {\n      const data = res.data.data;\n      let tagRaw = [];\n      data.tourDetailDTO.tagOfTourDTOList.forEach(element => {\n        tagRaw.push(parseInt(element.tagId));\n      });\n      let scheduleRaw = [];\n      data.tourScheduleDTOList.forEach(element => {\n        let serviceTourRaw = [];\n        element.tourServiceOfScheduleDTOList.map(item => serviceTourRaw.push({\n          value: item.serviceId\n        }));\n        const schedule = {\n          name: element.tourScheduleName,\n          content: element.content,\n          toPlace: element.toPlace,\n          serviceTour: serviceTourRaw,\n          openServices: false,\n          show: true\n        };\n        scheduleRaw.push(schedule);\n      });\n      let tourRaw = {\n        code: data.tourCode,\n        startPlace: data.startPlace,\n        endPlace: data.endPlace,\n        status: data.status,\n        type: data.tourType,\n        category: data.tourCategoryId,\n        mode: data.tourMode ? 1 : 0,\n        startDate: data.startDate,\n        numberOfDay: data.numberOfDay,\n        numberOfNight: data.numberOfNight,\n        minAdult: data.minAdult,\n        maxAdult: data.maxAdult,\n        minChildren: data.minChildren,\n        maxChildren: data.maxChildren,\n        minToActive: data.minToStart,\n        id: data.tourId,\n        name: data.tourName,\n        price: data.priceAdult,\n        adultPrice: data.priceAdult,\n        childrenPrice: data.priceChildren,\n        introduce: data.tourDetailDTO.tourIntroduce,\n        tag: tagRaw,\n        schedule: scheduleRaw,\n        city: data.startPlace,\n        addressStart: data.tourDetailDTO.addressStart,\n        include: data.tourDetailDTO.tourInclude,\n        nonInclude: data.tourDetailDTO.tourNonInclude,\n        generalTerms: data.tourDetailDTO.generalTerms,\n        moreDescription: data.tourDetailDTO.moreDescription,\n        latitude: data.tourDetailDTO.latitude,\n        longitude: data.tourDetailDTO.longitude,\n        accountId: data.accountId,\n        totalPrice: data.totalPrice,\n        deposit: data.deposit\n      };\n      let customerRegistedRaw;\n\n      if (tourRaw.accountId !== null) {\n        customerRegistedRaw = {\n          numberOfAdult: data.userBookingDTO.numberOfAdult,\n          numberOfChildren: data.userBookingDTO.numberOfChildren,\n          fullName: data.userBookingDTO.fullName,\n          phone: data.userBookingDTO.phone,\n          emailContact: data.userBookingDTO.email,\n          idCard: data.userBookingDTO.idCard,\n          dateOfIssue: data.userBookingDTO.dateOfIssue,\n          placeOfIssue: data.userBookingDTO.placeOfIssue\n        };\n      }\n\n      listAll(ref(storage, `tour/${tourRaw.id}/information/images`)).then(res => {\n        let tourImages = [];\n        let count = res.items.length;\n        let leng = 0;\n        res.items.forEach(item => {\n          getDownloadURL(ref(storage, item.fullPath)).then(url => {\n            axios({\n              url: url,\n              method: 'GET',\n              responseType: 'blob'\n            }).then(blob => {\n              tourImages.push(blob.data);\n              leng++;\n              console.log('tourRaw: ', tourRaw);\n              console.log('images: ', tourImages);\n\n              if (leng === count) {\n                console.log('xong');\n                setTour({ ...tourRaw,\n                  images: tourImages\n                });\n                setTourSchedule(scheduleRaw);\n                setCustomerRegisted({ ...customerRegistedRaw\n                });\n                setGetDataComplete(true);\n              }\n            });\n          });\n        });\n      });\n    });\n  }, []);\n  const count = useRef(-1);\n  const [leng, setLeng] = useState(0);\n  useEffect(() => {\n    if (leng === count.current) {\n      count.current = -1;\n      setLeng(0);\n      setShowLoading(false);\n      toast.success(languageList.txtAddSuccess);\n      navigate('/admin/services/tour-product');\n    }\n  }, [leng]);\n\n  const checkTourSchedule = () => {\n    if (tour.mode == 1 && tourSchedule.length != tour.numberOfDay) {\n      return false;\n    } else {\n      tourSchedule.forEach(element => {\n        if (element.name === '' || element.content === '' || element.content === '<p><br></p>' || element.toPlace === '') {\n          return false;\n        }\n      });\n    }\n\n    return true;\n  };\n\n  const listScreen = [/*#__PURE__*/_jsxDEV(GeneralInformationTour, {\n    languageSelected: languageSelected,\n    tour: tour,\n    setTour: setTour,\n    tourSchedule: tourSchedule,\n    setTourSchedule: setTourSchedule,\n    isDisabled: pathname !== '/admin/edit-tour'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 25\n  }, this), /*#__PURE__*/_jsxDEV(TourSchedule, {\n    languageSelected: languageSelected,\n    tour: tour,\n    tourSchedule: tourSchedule,\n    setTourSchedule: setTourSchedule,\n    serviceList: serviceList,\n    isDisabled: pathname !== '/admin/edit-tour'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(MoreInformationTour, {\n    languageSelected: languageSelected,\n    tour: tour,\n    setTour: setTour,\n    tourSchedule: tourSchedule,\n    isDisabled: pathname !== '/admin/edit-tour'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(InformationCustomerRegisterTourPrivate, {\n    userList: userList,\n    customerRegisted: customerRegisted,\n    setCustomerRegisted: setCustomerRegisted,\n    languageSelected: languageSelected,\n    tour: tour,\n    setTour: setTour,\n    isDisabled: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 321,\n    columnNumber: 5\n  }, this)];\n\n  const handleClickCloseOrActive = (title, content, callback, isRed, textOk, textCancel) => {\n    setShowConfirm(true);\n    setTitleConfirm(title);\n    setContentConfirm(content);\n    callbackConfirm.current = callback;\n    setIsRed(isRed);\n    setTextOk(textOk);\n    setTextCancel(textCancel);\n  };\n\n  const closeTour = () => {\n    setGetDataComplete(false);\n    axios.delete(`${API_DELETE_TOUR}/${tour.id}`).then(() => {\n      let tourRaw = { ...tour\n      };\n      tourRaw.status = 3;\n      setTour({ ...tourRaw\n      });\n      setGetDataComplete(true);\n      toast.success(languageSelected === 'EN' ? 'Closed' : 'ÄÃ£ ÄÃ³ng');\n    }).catch(e => console.log(e));\n    setShowConfirm(false);\n  };\n\n  const updateTour = () => {\n    if (tour.code === '' || tour.name === '' || tour.mode == 0 && (tour.startTime === '' || tour.endTime === '') || tour.introduce === '' || tour.introduce === '<p><br></p>' || tour.addressStart === '' || !checkTourSchedule || tour.images.length === 0) {\n      console.log('thieu');\n      setShowLoading(false);\n      toast.warning(languageList.txtNotFullInformation);\n    } else if (parseInt(tour.priceAdult) < 1000 || parseInt(tour.priceChildren) < 1000) {\n      console.log('sai');\n      setShowLoading(false);\n      toast.warning(languageList.txtInvalid);\n    } else {\n      const tourData = {\n        \"tourName\": tour.name,\n        \"tourCode\": tour.code,\n        \"startPlace\": tour.startPlace,\n        \"endPlace\": tour.endPlace,\n        \"status\": tour.status,\n        \"tourType\": tour.type,\n        \"startDate\": tour.type != 1 ? tour.startDate : '',\n        \"tourMode\": tour.mode,\n        \"numberOfDay\": tour.numberOfDay,\n        \"numberOfNight\": tour.numberOfNight,\n        \"minAdult\": tour.minAdult,\n        \"maxAdult\": tour.maxAdult,\n        \"minChildren\": tour.minChildren,\n        \"maxChildren\": tour.maxChildren,\n        \"minToStart\": tour.minToActive,\n        \"maxToStart\": tour.maxToActive,\n        \"startTime\": tour.startTime,\n        \"endTime\": tour.endTime,\n        \"priceAdult\": tour.adultPrice,\n        \"priceChildren\": tour.childrenPrice,\n        \"totalPrice\": tour.totalPrice,\n        \"deposit\": tour.deposit,\n        \"note\": \"note\",\n        \"tourCategoryId\": tour.category,\n        \"tourDetailDTO\": {\n          \"tourIntroduce\": tour.introduce,\n          \"tourInclude\": tour.include,\n          \"tourNonInclude\": tour.nonInclude,\n          \"generalTerms\": tour.generalTerms,\n          \"addressStart\": tour.addressStart,\n          \"description\": tour.description,\n          \"moreDescription\": tour.moreDescription,\n          \"priceAdult\": tour.adultPrice,\n          \"priceChildren\": tour.childrenPrice,\n          \"longitude\": tour.longitude,\n          \"latitude\": tour.latitude,\n          \"tagOfTourDTOList\": [...tour.tag].map(tagItem => ({\n            \"tagId\": tagItem\n          }))\n        },\n        \"tourScheduleDTOList\": tour.mode == 1 ? [...tourSchedule].map(tourScheduleItem => ({\n          \"tourScheduleName\": tourScheduleItem.name,\n          \"content\": tourScheduleItem.content,\n          \"toPlace\": tourScheduleItem.toPlace,\n          \"tourServiceOfScheduleDTOList\": [...tourScheduleItem.serviceTour].map(serviceTourItem => ({\n            \"serviceId\": serviceTourItem.value\n          }))\n        })) : [{\n          \"tourScheduleName\": [...tourSchedule][0].name,\n          \"content\": [...tourSchedule][0].content,\n          \"toPlace\": [...tourSchedule][0].toPlace,\n          \"tourServiceOfScheduleDTOList\": [...[...tourSchedule][0].serviceTour].map(serviceTourItem => ({\n            \"serviceId\": serviceTourItem.value\n          }))\n        }]\n      };\n      setShowLoading(true);\n      count.current = tour.images.length;\n      axios.post(`${API_UPDATE_TOUR}${tour.id}`, tourData).then(res => {\n        console.log(res);\n        let countDelete = 0;\n        let lengthDelete = 0;\n        let allRefDelete = [];\n        const refTour = ref(storage, `/tour/${tour.id}/information/images`);\n        listAll(refTour).then(res => {\n          countDelete = res.items.length;\n          console.log(countDelete);\n          res.items.forEach(itemRef => {\n            allRefDelete.push(itemRef);\n          });\n          allRefDelete.forEach(itemRef => {\n            deleteObject(ref(storage, itemRef.fullPath)).then(() => {\n              ++lengthDelete;\n              console.log(lengthDelete);\n\n              if (lengthDelete == countDelete) {\n                console.log('upload');\n                UploadImage(tour.images, 'tour', count, setLeng, res.data.data.tourId, 'information', 0, 'images');\n              }\n            });\n          });\n        });\n      }).catch(e => console.log(e));\n    }\n\n    setShowConfirm(false);\n  };\n\n  const activeTour = () => {\n    setGetDataComplete(false);\n    axios.put(`${API_ACTIVE_TOUR}/${id}`).then(() => {\n      let tourRaw = { ...tour\n      };\n      tourRaw.status = 1;\n      setTour({ ...tourRaw\n      });\n      setGetDataComplete(true);\n      toast.success(languageSelected === 'EN' ? 'Actived' : 'ÄÃ£ kÃ­ch hoáº¡t');\n    }).catch(e => console.log(e));\n    setShowConfirm(false);\n  };\n\n  if (!getDataComplete) {\n    return /*#__PURE__*/_jsxDEV(LoadingDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-content-view-service-admin right-content-create-tour\",\n    children: [showConfirm && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      title: titleConfirm,\n      content: contentConfirm,\n      callback: callbackConfirm.current,\n      isRed: isRed,\n      setShowDialog: setShowConfirm,\n      textOk: textOk,\n      textCancel: textCancel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"d-flex nav-view-service-admin\",\n      children: menuCreateTour.map((item, index) => index < 3 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOptionSelected(index),\n        className: `item-nav-view-service-admin \n                        ${optionSelected == index ? 'item-nav-view-service-admin-selected' : 'item-nav-view-service-admin-unselected'}\n                        ${index === 0 && 'br-left-top'} ${index === menuCreateTour.length - 1 && 'br-right-top'}`,\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }, this) : tour.type != 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setOptionSelected(index),\n        className: `item-nav-view-service-admin \n                    ${optionSelected == index ? 'item-nav-view-service-admin-selected' : 'item-nav-view-service-admin-unselected'}\n                    ${index === 0 && 'br-left-top'} ${index === menuCreateTour.length - 1 && 'br-right-top'}`,\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex content-title-view-service bg-white content-title-view-admin space-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"title-admin-view-service\",\n        children: titleLanguage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 17\n      }, this), pathname !== '/admin/edit-tour' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: tour.status == 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-active-close-tour btn-danger\",\n          onClick: () => handleClickCloseOrActive(table.txtTitleClose, table.txtContentClose, closeTour, true, table.txtClose, table.txtCancel),\n          children: languageSelected == 'EN' ? 'Close' : 'ÄÃ³ng'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-active-close-tour btn-success\",\n          onClick: () => handleClickCloseOrActive(table.txtTitleActive, table.txtContentActive, activeTour, false, table.txtActive, table.txtCancel),\n          children: languageSelected == 'EN' ? 'Active' : 'KÃ­ch hoáº¡t'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 29\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-active-close-tour btn-primary\",\n        onClick: () => handleClickCloseOrActive(table.txtEdit, table.txtContentEdit, updateTour, false, table.txtEdit, table.txtCancel),\n        children: languageSelected == 'EN' ? 'Edit' : 'Sá»­a'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content-right-view-tour-under\",\n      children: listScreen[optionSelected]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 482,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewTour, \"wIfm1/BXG4nF9eGhxC5HXJPIooM=\", false, function () {\n  return [useNavigate, useLocation];\n});\n\n_c = ViewTour;\nexport default _c2 = /*#__PURE__*/memo(ViewTour);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewTour\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","useEffect","useRef","useLocation","useNavigate","english","vietnamese","GeneralInformationTour","TourSchedule","MoreInformationTour","axios","API_GET_SERVICE_BY_CONDITION","API_GET_DETAIL_TOUR","API_GET_CUSTOMER","API_GET_PARTNER","API_DELETE_TOUR","API_ACTIVE_TOUR","API_UPDATE_TOUR","LoadingDialog","ref","listAll","getDownloadURL","deleteObject","storage","InformationCustomerRegisterTourPrivate","ConfirmDialog","toast","englishTable","vietnameseTable","englishConfirm","vietnameseConfirm","UploadImage","ViewTour","languageSelected","navigate","getDataComplete","setGetDataComplete","optionSelected","setOptionSelected","showLoading","setShowLoading","showConfirm","setShowConfirm","titleConfirm","setTitleConfirm","contentConfirm","setContentConfirm","callbackConfirm","isRed","setIsRed","textOk","setTextOk","textCancel","setTextCancel","languageList","table","menuCreateTour","titleLanguage","pathname","window","location","id","state","serviceList","setServiceList","userList","setUserList","services","get","params","isActive","isBlock","status","then","response","data","map","item","service","value","serviceId","label","serviceName","push","customers","page","size","res","content","itemCus","cus","accountId","email","resPart","catch","e","tour","setTour","tourSchedule","setTourSchedule","customerRegisted","setCustomerRegisted","numberOfAdult","numberOfChildren","fullName","phone","emailContact","idCard","dateOfIssue","placeOfIssue","tagRaw","tourDetailDTO","tagOfTourDTOList","forEach","element","parseInt","tagId","scheduleRaw","tourScheduleDTOList","serviceTourRaw","tourServiceOfScheduleDTOList","schedule","name","tourScheduleName","toPlace","serviceTour","openServices","show","tourRaw","code","tourCode","startPlace","endPlace","type","tourType","category","tourCategoryId","mode","tourMode","startDate","numberOfDay","numberOfNight","minAdult","maxAdult","minChildren","maxChildren","minToActive","minToStart","tourId","tourName","price","priceAdult","adultPrice","childrenPrice","priceChildren","introduce","tourIntroduce","tag","city","addressStart","include","tourInclude","nonInclude","tourNonInclude","generalTerms","moreDescription","latitude","longitude","totalPrice","deposit","customerRegistedRaw","userBookingDTO","tourImages","count","items","length","leng","fullPath","url","method","responseType","blob","console","log","images","setLeng","current","success","txtAddSuccess","checkTourSchedule","listScreen","handleClickCloseOrActive","title","callback","closeTour","delete","updateTour","startTime","endTime","warning","txtNotFullInformation","txtInvalid","tourData","maxToActive","description","tagItem","tourScheduleItem","serviceTourItem","post","countDelete","lengthDelete","allRefDelete","refTour","itemRef","activeTour","put","index","txtTitleClose","txtContentClose","txtClose","txtCancel","txtTitleActive","txtContentActive","txtActive","txtEdit","txtContentEdit"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/components/pages/ViewTour/index.js"],"sourcesContent":["import { memo, useState, useEffect, useRef } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { english, vietnamese } from '../../Languages/MenuCreateTour'\r\nimport GeneralInformationTour from '../GeneralInformationTour'\r\nimport TourSchedule from '../TourSchedule'\r\nimport MoreInformationTour from '../MoreInformationTour'\r\nimport axios from 'axios';\r\nimport { API_GET_SERVICE_BY_CONDITION, API_GET_DETAIL_TOUR, API_GET_CUSTOMER, API_GET_PARTNER, API_DELETE_TOUR, API_ACTIVE_TOUR, API_UPDATE_TOUR } from \"../../API\"\r\nimport LoadingDialog from '../../Layout/LoadingDialog'\r\nimport { ref, listAll, getDownloadURL, deleteObject } from 'firebase/storage'\r\nimport { storage } from \"../../../firebase/Upload\";\r\nimport InformationCustomerRegisterTourPrivate from '../InformationCustomerRegisterTourPrivate'\r\nimport './ViewTour.scss'\r\nimport ConfirmDialog from '../../Layout/ConfirmDialog'\r\nimport { toast } from 'react-toastify'\r\nimport { english as englishTable, vietnamese as vietnameseTable } from '../../Languages/TableTour';\r\nimport { english as englishConfirm, vietnamese as vietnameseConfirm } from '../../Languages/MoreInformationTour'\r\nimport { UploadImage } from '../../../firebase/UploadImage'\r\n\r\nfunction ViewTour({ languageSelected }) {\r\n    const navigate = useNavigate()\r\n\r\n    const [getDataComplete, setGetDataComplete] = useState(false)\r\n    const [optionSelected, setOptionSelected] = useState(0)\r\n    const [showLoading, setShowLoading] = useState(false)\r\n\r\n    const [showConfirm, setShowConfirm] = useState(false)\r\n    const [titleConfirm, setTitleConfirm] = useState('asd')\r\n    const [contentConfirm, setContentConfirm] = useState('asd')\r\n    const callbackConfirm = useRef(() => { })\r\n    const [isRed, setIsRed] = useState(true)\r\n    const [textOk, setTextOk] = useState('Ok')\r\n    const [textCancel, setTextCancel] = useState('Cancel')\r\n\r\n    const languageList = languageSelected === 'EN' ? englishConfirm : vietnameseConfirm\r\n    const table = languageSelected === 'EN' ? englishTable : vietnameseTable\r\n    const menuCreateTour = (languageSelected === 'EN' ? english : vietnamese)\r\n    const titleLanguage = (languageSelected === 'EN' ? 'Tour information' : 'ThÃ´ng tin tour')\r\n\r\n    const pathname = window.location.pathname\r\n\r\n    const id = useLocation().state.id\r\n\r\n    const [serviceList, setServiceList] = useState([])\r\n    const [userList, setUserList] = useState([])\r\n\r\n    useEffect(() => {\r\n        let services = []\r\n\r\n        axios.get(API_GET_SERVICE_BY_CONDITION, {\r\n            params: {\r\n                isActive: 1,\r\n                isBlock: window.location.pathname === '/admin/view-detail-tour' ? -1 : 0,\r\n                status: 1\r\n            }\r\n        }).then((response) => {\r\n            response.data.data.map((item) => {\r\n                let service = {\r\n                    value: item.serviceId,\r\n                    label: item.serviceName\r\n                }\r\n                services.push(service)\r\n            })\r\n\r\n            let customers = []\r\n            axios.get(API_GET_CUSTOMER, {\r\n                params: {\r\n                    page: 1,\r\n                    size: 99999\r\n                }\r\n            }).then((res) => {\r\n                res.data.data.content.map((itemCus) => {\r\n                    let cus = {\r\n                        value: itemCus.accountId,\r\n                        label: itemCus.email\r\n                    }\r\n                    customers.push(cus)\r\n                })\r\n                axios.get(API_GET_PARTNER, {\r\n                    params: {\r\n                        page: 1,\r\n                        size: 99999\r\n                    }\r\n                }).then((resPart) => {\r\n                    resPart.data.data.content.map((itemCus) => {\r\n                        let cus = {\r\n                            value: itemCus.accountId,\r\n                            label: itemCus.email\r\n                        }\r\n                        customers.push(cus)\r\n                    })\r\n                    setUserList([...customers])\r\n                }).catch(() => {\r\n                    setUserList([...customers])\r\n                })\r\n            }).catch((e) => {\r\n                axios.get(API_GET_PARTNER, {\r\n                    params: {\r\n                        page: 1,\r\n                        size: 99999\r\n                    }\r\n                }).then((resPart) => {\r\n                    resPart.data.data.content.map((itemCus) => {\r\n                        let cus = {\r\n                            value: itemCus.accountId,\r\n                            label: itemCus.email\r\n                        }\r\n                        customers.push(cus)\r\n                    })\r\n                    setUserList([...customers])\r\n                }).catch(() => {\r\n                    setUserList([...customers])\r\n                })\r\n            })\r\n            setServiceList([...services])\r\n        }).catch(() => {\r\n            let customers = []\r\n            axios.get(API_GET_CUSTOMER, {\r\n                params: {\r\n                    page: 1,\r\n                    size: 99999\r\n                }\r\n            }).then((res) => {\r\n                res.data.data.content.map((itemCus) => {\r\n                    let cus = {\r\n                        value: itemCus.accountId,\r\n                        label: itemCus.email\r\n                    }\r\n                    customers.push(cus)\r\n                })\r\n                axios.get(API_GET_PARTNER, {\r\n                    params: {\r\n                        page: 1,\r\n                        size: 99999\r\n                    }\r\n                }).then((resPart) => {\r\n                    resPart.data.data.content.map((itemCus) => {\r\n                        let cus = {\r\n                            value: itemCus.accountId,\r\n                            label: itemCus.email\r\n                        }\r\n                        customers.push(cus)\r\n                    })\r\n                    setUserList([...customers])\r\n                }).catch(() => {\r\n                    setUserList([...customers])\r\n                })\r\n            }).catch((e) => {\r\n                axios.get(API_GET_PARTNER, {\r\n                    params: {\r\n                        page: 1,\r\n                        size: 99999\r\n                    }\r\n                }).then((resPart) => {\r\n                    resPart.data.data.content.map((itemCus) => {\r\n                        let cus = {\r\n                            value: itemCus.accountId,\r\n                            label: itemCus.email\r\n                        }\r\n                        customers.push(cus)\r\n                    })\r\n                    setUserList([...customers])\r\n                }).catch(() => {\r\n                    setUserList([...customers])\r\n                })\r\n            })\r\n            setServiceList([...services])\r\n        })\r\n    }, [])\r\n\r\n    const [tour, setTour] = useState()\r\n    const [tourSchedule, setTourSchedule] = useState([])\r\n    const [customerRegisted, setCustomerRegisted] = useState({\r\n        numberOfAdult: 1,\r\n        numberOfChildren: 0,\r\n        fullName: '',\r\n        phone: '',\r\n        emailContact: '',\r\n        idCard: '',\r\n        dateOfIssue: '',\r\n        placeOfIssue: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`${API_GET_DETAIL_TOUR}/${id}`).then((res) => {\r\n            const data = res.data.data\r\n            let tagRaw = []\r\n            data.tourDetailDTO.tagOfTourDTOList.forEach(element => {\r\n                tagRaw.push(parseInt(element.tagId))\r\n            })\r\n\r\n            let scheduleRaw = []\r\n            data.tourScheduleDTOList.forEach(element => {\r\n                let serviceTourRaw = []\r\n                element.tourServiceOfScheduleDTOList.map((item) => serviceTourRaw.push({ value: item.serviceId }))\r\n\r\n                const schedule = {\r\n                    name: element.tourScheduleName,\r\n                    content: element.content,\r\n                    toPlace: element.toPlace,\r\n                    serviceTour: serviceTourRaw,\r\n                    openServices: false,\r\n                    show: true\r\n                }\r\n                scheduleRaw.push(schedule)\r\n            })\r\n\r\n            let tourRaw = {\r\n                code: data.tourCode,\r\n                startPlace: data.startPlace,\r\n                endPlace: data.endPlace,\r\n                status: data.status,\r\n                type: data.tourType,\r\n                category: data.tourCategoryId,\r\n                mode: data.tourMode ? 1 : 0,\r\n                startDate: data.startDate,\r\n                numberOfDay: data.numberOfDay,\r\n                numberOfNight: data.numberOfNight,\r\n                minAdult: data.minAdult,\r\n                maxAdult: data.maxAdult,\r\n                minChildren: data.minChildren,\r\n                maxChildren: data.maxChildren,\r\n                minToActive: data.minToStart,\r\n                id: data.tourId,\r\n                name: data.tourName,\r\n                price: data.priceAdult,\r\n                adultPrice: data.priceAdult,\r\n                childrenPrice: data.priceChildren,\r\n                introduce: data.tourDetailDTO.tourIntroduce,\r\n                tag: tagRaw,\r\n                schedule: scheduleRaw,\r\n                city: data.startPlace,\r\n                addressStart: data.tourDetailDTO.addressStart,\r\n                include: data.tourDetailDTO.tourInclude,\r\n                nonInclude: data.tourDetailDTO.tourNonInclude,\r\n                generalTerms: data.tourDetailDTO.generalTerms,\r\n                moreDescription: data.tourDetailDTO.moreDescription,\r\n                latitude: data.tourDetailDTO.latitude,\r\n                longitude: data.tourDetailDTO.longitude,\r\n                accountId: data.accountId,\r\n                totalPrice: data.totalPrice,\r\n                deposit: data.deposit\r\n            }\r\n\r\n            let customerRegistedRaw;\r\n\r\n            if (tourRaw.accountId !== null) {\r\n                customerRegistedRaw = {\r\n                    numberOfAdult: data.userBookingDTO.numberOfAdult,\r\n                    numberOfChildren: data.userBookingDTO.numberOfChildren,\r\n                    fullName: data.userBookingDTO.fullName,\r\n                    phone: data.userBookingDTO.phone,\r\n                    emailContact: data.userBookingDTO.email,\r\n                    idCard: data.userBookingDTO.idCard,\r\n                    dateOfIssue: data.userBookingDTO.dateOfIssue,\r\n                    placeOfIssue: data.userBookingDTO.placeOfIssue\r\n                }\r\n            }\r\n\r\n            listAll(ref(storage, `tour/${tourRaw.id}/information/images`)).then((res) => {\r\n                let tourImages = []\r\n                let count = res.items.length;\r\n                let leng = 0;\r\n                res.items.forEach((item) => {\r\n                    getDownloadURL(ref(storage, item.fullPath))\r\n                        .then((url) => {\r\n                            axios({\r\n                                url: url,\r\n                                method: 'GET',\r\n                                responseType: 'blob',\r\n                            }).then(blob => {\r\n                                tourImages.push(blob.data)\r\n                                leng++\r\n                                console.log('tourRaw: ', tourRaw)\r\n                                console.log('images: ', tourImages)\r\n                                if (leng === count) {\r\n                                    console.log('xong')\r\n                                    setTour({\r\n                                        ...tourRaw, images: tourImages\r\n                                    })\r\n                                    setTourSchedule(scheduleRaw)\r\n                                    setCustomerRegisted({ ...customerRegistedRaw })\r\n                                    setGetDataComplete(true)\r\n                                }\r\n                            })\r\n                        })\r\n                })\r\n            })\r\n\r\n        })\r\n    }, [])\r\n\r\n    const count = useRef(-1)\r\n    const [leng, setLeng] = useState(0)\r\n    useEffect(() => {\r\n        if (leng === count.current) {\r\n            count.current = -1;\r\n            setLeng(0)\r\n            setShowLoading(false)\r\n            toast.success(languageList.txtAddSuccess)\r\n            navigate('/admin/services/tour-product')\r\n        }\r\n    }, [leng])\r\n\r\n    const checkTourSchedule = () => {\r\n        if (tour.mode == 1 && tourSchedule.length != tour.numberOfDay) {\r\n            return false\r\n        } else {\r\n            tourSchedule.forEach(element => {\r\n                if (element.name === '' || element.content === '' || element.content === '<p><br></p>' || element.toPlace === '') {\r\n                    return false\r\n                }\r\n            });\r\n        }\r\n        return true\r\n    }\r\n\r\n    const listScreen = [<GeneralInformationTour languageSelected={languageSelected} tour={tour} setTour={setTour} tourSchedule={tourSchedule} setTourSchedule={setTourSchedule} isDisabled={pathname !== '/admin/edit-tour'} />,\r\n    <TourSchedule languageSelected={languageSelected} tour={tour} tourSchedule={tourSchedule} setTourSchedule={setTourSchedule} serviceList={serviceList} isDisabled={pathname !== '/admin/edit-tour'} />,\r\n    <MoreInformationTour languageSelected={languageSelected} tour={tour} setTour={setTour} tourSchedule={tourSchedule} isDisabled={pathname !== '/admin/edit-tour'} />,\r\n    <InformationCustomerRegisterTourPrivate userList={userList} customerRegisted={customerRegisted} setCustomerRegisted={setCustomerRegisted} languageSelected={languageSelected} tour={tour} setTour={setTour} isDisabled />]\r\n\r\n    const handleClickCloseOrActive = (title, content, callback, isRed, textOk, textCancel) => {\r\n        setShowConfirm(true)\r\n        setTitleConfirm(title)\r\n        setContentConfirm(content)\r\n        callbackConfirm.current = callback\r\n        setIsRed(isRed)\r\n        setTextOk(textOk)\r\n        setTextCancel(textCancel)\r\n    }\r\n\r\n    const closeTour = () => {\r\n        setGetDataComplete(false)\r\n        axios.delete(`${API_DELETE_TOUR}/${tour.id}`).then(() => {\r\n            let tourRaw = { ...tour }\r\n            tourRaw.status = 3\r\n            setTour({ ...tourRaw })\r\n            setGetDataComplete(true)\r\n            toast.success(languageSelected === 'EN' ? 'Closed' : 'ÄÃ£ ÄÃ³ng')\r\n        }).catch((e) => console.log(e))\r\n        setShowConfirm(false)\r\n    }\r\n\r\n    const updateTour = () => {\r\n        if (tour.code === '' || tour.name === '' || (tour.mode == 0 && (tour.startTime === '' || tour.endTime === ''))\r\n            || tour.introduce === '' || tour.introduce === '<p><br></p>' || tour.addressStart === '' || !checkTourSchedule\r\n            || tour.images.length === 0) {\r\n            console.log('thieu')\r\n            setShowLoading(false)\r\n            toast.warning(languageList.txtNotFullInformation)\r\n        }\r\n        else if (parseInt(tour.priceAdult) < 1000 || parseInt(tour.priceChildren) < 1000) {\r\n            console.log('sai')\r\n            setShowLoading(false)\r\n            toast.warning(languageList.txtInvalid)\r\n        }\r\n        else {\r\n            const tourData = {\r\n                \"tourName\": tour.name,\r\n                \"tourCode\": tour.code,\r\n                \"startPlace\": tour.startPlace,\r\n                \"endPlace\": tour.endPlace,\r\n                \"status\": tour.status,\r\n                \"tourType\": tour.type,\r\n                \"startDate\": tour.type != 1 ? tour.startDate : '',\r\n                \"tourMode\": tour.mode,\r\n                \"numberOfDay\": tour.numberOfDay,\r\n                \"numberOfNight\": tour.numberOfNight,\r\n                \"minAdult\": tour.minAdult,\r\n                \"maxAdult\": tour.maxAdult,\r\n                \"minChildren\": tour.minChildren,\r\n                \"maxChildren\": tour.maxChildren,\r\n                \"minToStart\": tour.minToActive,\r\n                \"maxToStart\": tour.maxToActive,\r\n                \"startTime\": tour.startTime,\r\n                \"endTime\": tour.endTime,\r\n                \"priceAdult\": tour.adultPrice,\r\n                \"priceChildren\": tour.childrenPrice,\r\n                \"totalPrice\": tour.totalPrice,\r\n                \"deposit\": tour.deposit,\r\n                \"note\": \"note\",\r\n                \"tourCategoryId\": tour.category,\r\n                \"tourDetailDTO\":\r\n                {\r\n                    \"tourIntroduce\": tour.introduce,\r\n                    \"tourInclude\": tour.include,\r\n                    \"tourNonInclude\": tour.nonInclude,\r\n                    \"generalTerms\": tour.generalTerms,\r\n                    \"addressStart\": tour.addressStart,\r\n                    \"description\": tour.description,\r\n                    \"moreDescription\": tour.moreDescription,\r\n                    \"priceAdult\": tour.adultPrice,\r\n                    \"priceChildren\": tour.childrenPrice,\r\n                    \"longitude\": tour.longitude,\r\n                    \"latitude\": tour.latitude,\r\n                    \"tagOfTourDTOList\":\r\n                        [...tour.tag].map((tagItem) => (\r\n                            {\r\n                                \"tagId\": tagItem\r\n                            }\r\n                        )\r\n                        )\r\n                },\r\n                \"tourScheduleDTOList\": tour.mode == 1 ?\r\n                    [...tourSchedule].map((tourScheduleItem) => (\r\n                        {\r\n                            \"tourScheduleName\": tourScheduleItem.name,\r\n                            \"content\": tourScheduleItem.content,\r\n                            \"toPlace\": tourScheduleItem.toPlace,\r\n                            \"tourServiceOfScheduleDTOList\":\r\n                                [...tourScheduleItem.serviceTour].map((serviceTourItem) => (\r\n                                    {\r\n                                        \"serviceId\": serviceTourItem.value\r\n                                    }\r\n                                )\r\n                                )\r\n                        }\r\n                    )\r\n                    ) : [{\r\n                        \"tourScheduleName\": [...tourSchedule][0].name,\r\n                        \"content\": [...tourSchedule][0].content,\r\n                        \"toPlace\": [...tourSchedule][0].toPlace,\r\n                        \"tourServiceOfScheduleDTOList\":\r\n                            [...[...tourSchedule][0].serviceTour].map((serviceTourItem) => (\r\n                                {\r\n                                    \"serviceId\": serviceTourItem.value\r\n                                }\r\n                            )\r\n                            )\r\n                    }]\r\n            }\r\n            setShowLoading(true)\r\n            count.current = tour.images.length\r\n            axios.post(`${API_UPDATE_TOUR}${tour.id}`, tourData).then((res) => {\r\n                console.log(res)\r\n                let countDelete = 0;\r\n                let lengthDelete = 0;\r\n                let allRefDelete = []\r\n\r\n                const refTour = ref(storage, `/tour/${tour.id}/information/images`)\r\n                listAll(refTour).then((res) => {\r\n                    countDelete = res.items.length\r\n                    console.log(countDelete)\r\n                    res.items.forEach((itemRef) => {\r\n                        allRefDelete.push(itemRef)\r\n                    })\r\n                    allRefDelete.forEach((itemRef) => {\r\n                        deleteObject(ref(storage, itemRef.fullPath)).then(() => {\r\n                            ++lengthDelete\r\n                            console.log(lengthDelete)\r\n                            if (lengthDelete == countDelete) {\r\n                                console.log('upload')\r\n                                UploadImage(tour.images, 'tour', count, setLeng, res.data.data.tourId, 'information', 0, 'images')\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n            }).catch((e) => console.log(e))\r\n        }\r\n        setShowConfirm(false)\r\n    }\r\n\r\n    const activeTour = () => {\r\n        setGetDataComplete(false)\r\n        axios.put(`${API_ACTIVE_TOUR}/${id}`).then(() => {\r\n            let tourRaw = { ...tour }\r\n            tourRaw.status = 1\r\n            setTour({ ...tourRaw })\r\n            setGetDataComplete(true)\r\n            toast.success(languageSelected === 'EN' ? 'Actived' : 'ÄÃ£ kÃ­ch hoáº¡t')\r\n        }).catch((e) => console.log(e))\r\n        setShowConfirm(false)\r\n    }\r\n\r\n\r\n    if (!getDataComplete) {\r\n        return (<LoadingDialog />)\r\n    }\r\n\r\n    return (\r\n        <div className='main-content-view-service-admin right-content-create-tour'>\r\n            {showConfirm &&\r\n                <ConfirmDialog title={titleConfirm} content={contentConfirm} callback={callbackConfirm.current} isRed={isRed} setShowDialog={setShowConfirm} textOk={textOk} textCancel={textCancel} />\r\n            }\r\n            <nav className='d-flex nav-view-service-admin'>\r\n                {menuCreateTour.map((item, index) => (\r\n                    index < 3 ?\r\n                        <div onClick={() => setOptionSelected(index)}\r\n                            className={`item-nav-view-service-admin \r\n                        ${optionSelected == index ? 'item-nav-view-service-admin-selected' : 'item-nav-view-service-admin-unselected'}\r\n                        ${index === 0 && 'br-left-top'} ${index === menuCreateTour.length - 1 && 'br-right-top'}`}>\r\n                            {item}\r\n                        </div>\r\n                        :\r\n                        tour.type != 1 && <div onClick={() => setOptionSelected(index)}\r\n                            className={`item-nav-view-service-admin \r\n                    ${optionSelected == index ? 'item-nav-view-service-admin-selected' : 'item-nav-view-service-admin-unselected'}\r\n                    ${index === 0 && 'br-left-top'} ${index === menuCreateTour.length - 1 && 'br-right-top'}`}>\r\n                            {item}\r\n                        </div>\r\n                ))}\r\n            </nav>\r\n\r\n            <div className='d-flex content-title-view-service bg-white content-title-view-admin space-between'>\r\n                <label className='title-admin-view-service'>{titleLanguage}</label>\r\n                {pathname !== '/admin/edit-tour' ?\r\n                    <>\r\n                        {tour.status == 1 ?\r\n                            <button className='btn btn-active-close-tour btn-danger'\r\n                                onClick={() => handleClickCloseOrActive(table.txtTitleClose, table.txtContentClose, closeTour, true, table.txtClose, table.txtCancel)}>\r\n                                {languageSelected == 'EN' ? 'Close' : 'ÄÃ³ng'}\r\n                            </button>\r\n                            :\r\n                            <button className='btn btn-active-close-tour btn-success'\r\n                                onClick={() => handleClickCloseOrActive(table.txtTitleActive, table.txtContentActive, activeTour, false, table.txtActive, table.txtCancel)}>\r\n                                {languageSelected == 'EN' ? 'Active' : 'KÃ­ch hoáº¡t'}\r\n                            </button>\r\n                        }\r\n                    </>\r\n                    :\r\n                    <button className='btn btn-active-close-tour btn-primary'\r\n                        onClick={() => handleClickCloseOrActive(table.txtEdit, table.txtContentEdit, updateTour, false, table.txtEdit, table.txtCancel)}>\r\n                        {languageSelected == 'EN' ? 'Edit' : 'Sá»­a'}\r\n                    </button>\r\n                }\r\n            </div>\r\n\r\n            <div className='main-content-right-view-tour-under'>\r\n                {listScreen[optionSelected]}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ViewTour)"],"mappings":"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"},"metadata":{},"sourceType":"module"}