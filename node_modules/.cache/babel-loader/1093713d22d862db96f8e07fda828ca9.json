{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Hoc ReactJS\\\\wetravelfrontend\\\\src\\\\components\\\\pages\\\\AdminSuppliers\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { AiOutlineLeft, AiOutlineRight, AiOutlineSearch, AiOutlineDelete, AiOutlineCheckCircle } from 'react-icons/ai';\nimport { BsThreeDotsVertical } from 'react-icons/bs';\nimport { HiOutlineEye } from 'react-icons/hi';\nimport LoadingDialog from '../../Layout/LoadingDialog';\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\nimport '@szhsin/react-menu/dist/index.css';\nimport '@szhsin/react-menu/dist/transitions/slide.css';\nimport { API_GET_SERVICE_BY_CONDITION, API_DELETE_SERVICE } from '../../API';\nimport axios from 'axios';\nimport { english, vietnamese } from '../../Languages/AdminSuppliers';\nimport './AdminSuppliers.scss';\nimport { toast } from 'react-toastify';\nimport { englishTypeService, vietnameseTypeService } from '../../Languages/ServiceType';\nimport ConfirmDialog from '../../Layout/ConfirmDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminSuppliers(_ref) {\n  _s();\n\n  let {\n    languageSelected\n  } = _ref;\n  let serviceCategory = 0;\n  const pathName = window.location.pathname;\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [titleConfirm, setTitleConfirm] = useState('asd');\n  const [contentConfirm, setContentConfirm] = useState('asd');\n  const callbackConfirm = useRef(() => {});\n  const [isRed, setIsRed] = useState(true);\n  const [textOk, setTextOk] = useState('Ok');\n  const [textCancel, setTextCancel] = useState('Cancel');\n  const [services, setServices] = useState([]);\n  const [getDataComplete, setGetDataComplete] = useState(false);\n  const navigate = useNavigate();\n  const languagesList = languageSelected === 'EN' ? english : vietnamese;\n  const typeService = languageSelected === 'EN' ? englishTypeService : vietnameseTypeService;\n  const maxItemInPage = 10;\n  const [numberPage, setNumberPage] = useState(1);\n  const [arrayNumberOfPages, setArrayNumberOfPages] = useState([]);\n\n  if (pathName.includes('accommodation')) {\n    serviceCategory = 1;\n  } else if (pathName.includes('entertainment')) {\n    serviceCategory = 2;\n  } else {\n    serviceCategory = 3;\n  }\n\n  useEffect(() => {\n    axios.get(API_GET_SERVICE_BY_CONDITION, {\n      params: {\n        serviceCategoryId: serviceCategory,\n        isActive: 1\n      }\n    }).then(response => {\n      const data = response.data.data;\n      let servicesRaw = [];\n      data.map(service => {\n        const serviceItem = {\n          serviceId: service.serviceId,\n          serviceName: service.serviceName,\n          serviceCategory: parseInt(service.serviceCategory),\n          serviceAddress: service.address,\n          serviceCity: service.city,\n          partnerEmail: service.partnerEmail,\n          status: service.status,\n          typeOfServiceCategory: service.typeOfServiceCategory,\n          isActive: service.isActive,\n          isBlock: service.isBlock\n        };\n        servicesRaw.push(serviceItem);\n      });\n      const numberOfPages = Math.ceil(servicesRaw.length / maxItemInPage);\n      let arrayPage = [];\n\n      for (let i = 0; i < numberOfPages; i++) {\n        arrayPage.push(i + 1);\n      }\n\n      setArrayNumberOfPages(arrayPage);\n      setServices([...servicesRaw]);\n      setGetDataComplete(true);\n    }).catch(() => {\n      setServices([]);\n      setGetDataComplete(true);\n    });\n  }, [pathName]);\n  let numberOfPages = [1, 2]; // for (let i = 0; i < totlePage; i++) {\n  //     numberOfPages.push(i + 1)\n  // }\n\n  if (!getDataComplete) {\n    return /*#__PURE__*/_jsxDEV(LoadingDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n  const handleClickShowConfig = (title, content, callback, isRed, textOk, textCancel) => {\n    setShowConfirm(true);\n    setTitleConfirm(title);\n    setContentConfirm(content);\n    callbackConfirm.current = callback;\n    setIsRed(isRed);\n    setTextOk(textOk);\n    setTextCancel(textCancel);\n  };\n\n  const handleClickDelete = (id, index) => {\n    setGetDataComplete(false);\n    axios.delete(API_DELETE_SERVICE + id).then(() => {\n      setGetDataComplete(true);\n      toast.success(languageSelected === 'EN' ? 'Deleted' : 'Đã xoá');\n      let servicesRaw = [...services];\n      servicesRaw[index].isBlock = true;\n      setServices(servicesRaw);\n      setShowConfirm(false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showConfirm && /*#__PURE__*/_jsxDEV(ConfirmDialog, {\n      textOk: textOk,\n      textCancel: textCancel,\n      title: titleConfirm,\n      content: contentConfirm,\n      callback: callbackConfirm.current,\n      isRed: isRed,\n      setShowDialog: setShowConfirm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex tool-list-service-main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex list-service-tool\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"search-name\",\n          className: \"search-input-text\",\n          children: [/*#__PURE__*/_jsxDEV(AiOutlineSearch, {\n            className: \"icon-inner icon-search-list-service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"Name\",\n            id: \"search-name\",\n            type: \"text\",\n            className: \"input-inline input-list-service search-name-service input-inline-list-service\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover table-list-service mt-30 table-striped\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: languagesList.txtName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: languagesList.txtType\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: languagesList.txtAddress\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: languagesList.txtStatus\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: languagesList.txtAction\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [...services].map((service, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: service.serviceName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: typeService[serviceCategory - 1][parseInt(service.typeOfServiceCategory) - 1].title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: `${service.serviceAddress}, ${service.serviceCity}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: service.isBlock && /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"status status-close\",\n                children: languagesList.txtDeleted\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 58\n              }, this) || service.status === 1 && /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"status status-active\",\n                children: languagesList.txtActive\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 62\n              }, this) || service.status === 2 && /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"status status-close\",\n                children: languagesList.txtClose\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 62\n              }, this) || service.status === 3 && /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"status status-pause\",\n                children: languagesList.txtPause\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Menu, {\n                menuButton: /*#__PURE__*/_jsxDEV(MenuButton, {\n                  className: \"btn-action\",\n                  children: /*#__PURE__*/_jsxDEV(BsThreeDotsVertical, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 90\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 55\n                }, this),\n                transition: true,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  children: [/*#__PURE__*/_jsxDEV(HiOutlineEye, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 45\n                  }, this), \" \", languagesList.txtPreview]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 41\n                }, this), service.isBlock ? /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleClickShowConfig(languagesList.txtActive, languagesList.txtWarningActiveService, () => handleClickDelete(service.serviceId, index), false, languagesList.txtActive, languagesList.txtCancel),\n                  children: [/*#__PURE__*/_jsxDEV(AiOutlineCheckCircle, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 49\n                  }, this), \" \", languagesList.txtActive]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(MenuItem, {\n                  onClick: () => handleClickShowConfig(languagesList.txtDelete, languagesList.txtWarningDeleteService, () => handleClickDelete(service.serviceId, index), true, languagesList.txtDelete, languagesList.txtCancel),\n                  children: [/*#__PURE__*/_jsxDEV(AiOutlineDelete, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 49\n                  }, this), \" \", languagesList.txtDelete]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex paging float-end mb-20\",\n      children: [numberPage > 1 && /*#__PURE__*/_jsxDEV(\"label\", {\n        onClick: () => setNumberPage(pre => pre - 1),\n        className: \"btn-paging unseleted\",\n        children: /*#__PURE__*/_jsxDEV(AiOutlineLeft, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 36\n      }, this), numberOfPages.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: `btn-paging ${numberPage === item ? 'selected-paging' : 'unseleted'}`,\n        onClick: () => setNumberPage(item),\n        children: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }, this)), numberPage < numberOfPages.length && numberOfPages.length > 1 && /*#__PURE__*/_jsxDEV(\"label\", {\n        onClick: () => setNumberPage(pre => pre + 1),\n        className: \"btn-paging unseleted\",\n        children: /*#__PURE__*/_jsxDEV(AiOutlineRight, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 83\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AdminSuppliers, \"GIe/y6RR4bpaEUkZ4w87gwfQP5Q=\", false, function () {\n  return [useNavigate];\n});\n\n_c = AdminSuppliers;\nexport default _c2 = /*#__PURE__*/memo(AdminSuppliers);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AdminSuppliers\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","useEffect","useRef","useNavigate","AiOutlineLeft","AiOutlineRight","AiOutlineSearch","AiOutlineDelete","AiOutlineCheckCircle","BsThreeDotsVertical","HiOutlineEye","LoadingDialog","Menu","MenuItem","MenuButton","API_GET_SERVICE_BY_CONDITION","API_DELETE_SERVICE","axios","english","vietnamese","toast","englishTypeService","vietnameseTypeService","ConfirmDialog","AdminSuppliers","languageSelected","serviceCategory","pathName","window","location","pathname","showConfirm","setShowConfirm","titleConfirm","setTitleConfirm","contentConfirm","setContentConfirm","callbackConfirm","isRed","setIsRed","textOk","setTextOk","textCancel","setTextCancel","services","setServices","getDataComplete","setGetDataComplete","navigate","languagesList","typeService","maxItemInPage","numberPage","setNumberPage","arrayNumberOfPages","setArrayNumberOfPages","includes","get","params","serviceCategoryId","isActive","then","response","data","servicesRaw","map","service","serviceItem","serviceId","serviceName","parseInt","serviceAddress","address","serviceCity","city","partnerEmail","status","typeOfServiceCategory","isBlock","push","numberOfPages","Math","ceil","length","arrayPage","i","catch","handleClickShowConfig","title","content","callback","current","handleClickDelete","id","index","delete","success","txtName","txtType","txtAddress","txtStatus","txtAction","txtDeleted","txtActive","txtClose","txtPause","txtPreview","txtWarningActiveService","txtCancel","txtDelete","txtWarningDeleteService","pre","item"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/components/pages/AdminSuppliers/index.js"],"sourcesContent":["import { memo, useState, useEffect, useRef } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { AiOutlineLeft, AiOutlineRight, AiOutlineSearch, AiOutlineDelete, AiOutlineCheckCircle } from 'react-icons/ai'\r\nimport { BsThreeDotsVertical } from 'react-icons/bs'\r\nimport { HiOutlineEye } from 'react-icons/hi'\r\nimport LoadingDialog from '../../Layout/LoadingDialog'\r\nimport { Menu, MenuItem, MenuButton } from '@szhsin/react-menu';\r\nimport '@szhsin/react-menu/dist/index.css';\r\nimport '@szhsin/react-menu/dist/transitions/slide.css';\r\nimport { API_GET_SERVICE_BY_CONDITION, API_DELETE_SERVICE } from '../../API'\r\nimport axios from 'axios'\r\nimport { english, vietnamese } from '../../Languages/AdminSuppliers'\r\nimport './AdminSuppliers.scss'\r\nimport { toast } from 'react-toastify'\r\nimport { englishTypeService, vietnameseTypeService } from '../../Languages/ServiceType'\r\nimport ConfirmDialog from '../../Layout/ConfirmDialog'\r\n\r\nfunction AdminSuppliers({ languageSelected }) {\r\n    let serviceCategory = 0;\r\n    const pathName = window.location.pathname\r\n\r\n    const [showConfirm, setShowConfirm] = useState(false)\r\n    const [titleConfirm, setTitleConfirm] = useState('asd')\r\n    const [contentConfirm, setContentConfirm] = useState('asd')\r\n    const callbackConfirm = useRef(() => { })\r\n    const [isRed, setIsRed] = useState(true)\r\n    const [textOk, setTextOk] = useState('Ok')\r\n    const [textCancel, setTextCancel] = useState('Cancel')\r\n\r\n    const [services, setServices] = useState([])\r\n    const [getDataComplete, setGetDataComplete] = useState(false)\r\n    const navigate = useNavigate()\r\n\r\n    const languagesList = languageSelected === 'EN' ? english : vietnamese\r\n    const typeService = languageSelected === 'EN' ? englishTypeService : vietnameseTypeService\r\n\r\n    const maxItemInPage = 10\r\n    const [numberPage, setNumberPage] = useState(1)\r\n    const [arrayNumberOfPages, setArrayNumberOfPages] = useState([])\r\n\r\n    if (pathName.includes('accommodation')) {\r\n        serviceCategory = 1\r\n    }\r\n    else if (pathName.includes('entertainment')) {\r\n        serviceCategory = 2\r\n    }\r\n    else {\r\n        serviceCategory = 3\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(API_GET_SERVICE_BY_CONDITION, {\r\n            params: {\r\n                serviceCategoryId: serviceCategory,\r\n                isActive: 1\r\n            }\r\n        }).then((response) => {\r\n            const data = response.data.data\r\n            let servicesRaw = []\r\n            data.map((service) => {\r\n                const serviceItem = {\r\n                    serviceId: service.serviceId,\r\n                    serviceName: service.serviceName,\r\n                    serviceCategory: parseInt(service.serviceCategory),\r\n                    serviceAddress: service.address,\r\n                    serviceCity: service.city,\r\n                    partnerEmail: service.partnerEmail,\r\n                    status: service.status,\r\n                    typeOfServiceCategory: service.typeOfServiceCategory,\r\n                    isActive: service.isActive,\r\n                    isBlock: service.isBlock\r\n                }\r\n                servicesRaw.push(serviceItem)\r\n            })\r\n            const numberOfPages = Math.ceil(servicesRaw.length / maxItemInPage)\r\n            let arrayPage = []\r\n            for (let i = 0; i < numberOfPages; i++) {\r\n                arrayPage.push(i + 1)\r\n            }\r\n            setArrayNumberOfPages(arrayPage)\r\n            setServices([...servicesRaw])\r\n            setGetDataComplete(true)\r\n        }).catch(() => {\r\n            setServices([])\r\n            setGetDataComplete(true)\r\n        })\r\n    }, [pathName])\r\n\r\n    let numberOfPages = [1, 2]\r\n    // for (let i = 0; i < totlePage; i++) {\r\n    //     numberOfPages.push(i + 1)\r\n    // }\r\n\r\n    if (!getDataComplete) {\r\n        return (\r\n            <LoadingDialog />\r\n        )\r\n    }\r\n\r\n    const handleClickShowConfig = (title, content, callback, isRed, textOk, textCancel) => {\r\n        setShowConfirm(true)\r\n        setTitleConfirm(title)\r\n        setContentConfirm(content)\r\n        callbackConfirm.current = callback\r\n        setIsRed(isRed)\r\n        setTextOk(textOk)\r\n        setTextCancel(textCancel)\r\n    }\r\n\r\n    const handleClickDelete = (id, index) => {\r\n        setGetDataComplete(false)\r\n        axios.delete(API_DELETE_SERVICE + id).then(() => {\r\n            setGetDataComplete(true)\r\n            toast.success(languageSelected === 'EN' ? 'Deleted' : 'Đã xoá')\r\n\r\n            let servicesRaw = [...services]\r\n            servicesRaw[index].isBlock = true\r\n            setServices(servicesRaw)\r\n            setShowConfirm(false)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {showConfirm &&\r\n                <ConfirmDialog textOk={textOk} textCancel={textCancel} title={titleConfirm} content={contentConfirm} callback={callbackConfirm.current} isRed={isRed} setShowDialog={setShowConfirm} />\r\n            }\r\n            <div className='d-flex tool-list-service-main'>\r\n                <div className='d-flex list-service-tool'>\r\n                    <label htmlFor='search-name' className='search-input-text'>\r\n                        <AiOutlineSearch className='icon-inner icon-search-list-service' />\r\n                        <input placeholder='Name' id='search-name' type='text' className='input-inline input-list-service search-name-service input-inline-list-service' />\r\n                    </label>\r\n                </div>\r\n            </div>\r\n            <div className='space-table'>\r\n                <table className='table table-hover table-list-service mt-30 table-striped'>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>#</td>\r\n                            <td>{languagesList.txtName}</td>\r\n                            <td>{languagesList.txtType}</td>\r\n                            <td>{languagesList.txtAddress}</td>\r\n                            <td>{languagesList.txtStatus}</td>\r\n                            <td>{languagesList.txtAction}</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {[...services].map((service, index) => (\r\n                            <tr>\r\n                                <td>{index + 1}</td>\r\n                                <td>{service.serviceName}</td>\r\n                                <td>{typeService[serviceCategory - 1][parseInt(service.typeOfServiceCategory) - 1].title}</td>\r\n                                <td>{`${service.serviceAddress}, ${service.serviceCity}`}</td>\r\n                                <td>{(service.isBlock && <label className='status status-close'>{languagesList.txtDeleted}</label>) ||\r\n                                    (service.status === 1 && <label className='status status-active'>{languagesList.txtActive}</label>) ||\r\n                                    (service.status === 2 && <label className='status status-close'>{languagesList.txtClose}</label>) ||\r\n                                    (service.status === 3 && <label className='status status-pause'>{languagesList.txtPause}</label>)}\r\n                                </td>\r\n                                <td>\r\n                                    <Menu menuButton={<MenuButton className='btn-action'><BsThreeDotsVertical /></MenuButton>} transition>\r\n                                        <MenuItem>\r\n                                            <HiOutlineEye /> {languagesList.txtPreview}\r\n                                        </MenuItem>\r\n                                        {service.isBlock ?\r\n                                            <MenuItem onClick={() => handleClickShowConfig(languagesList.txtActive,\r\n                                                languagesList.txtWarningActiveService,\r\n                                                () => handleClickDelete(service.serviceId, index), false, languagesList.txtActive,\r\n                                                languagesList.txtCancel)}>\r\n                                                <AiOutlineCheckCircle /> {languagesList.txtActive}\r\n                                            </MenuItem> :\r\n                                            <MenuItem\r\n                                                onClick={() => handleClickShowConfig(languagesList.txtDelete,\r\n                                                    languagesList.txtWarningDeleteService,\r\n                                                    () => handleClickDelete(service.serviceId, index), true, languagesList.txtDelete,\r\n                                                    languagesList.txtCancel)}>\r\n                                                <AiOutlineDelete /> {languagesList.txtDelete}\r\n                                            </MenuItem>\r\n                                        }\r\n                                    </Menu>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className='d-flex paging float-end mb-20'>\r\n                {numberPage > 1 && <label onClick={() => setNumberPage(pre => pre - 1)} className='btn-paging unseleted'>\r\n                    <AiOutlineLeft />\r\n                </label>}\r\n                {numberOfPages.map((item) => (\r\n                    <label className={`btn-paging ${numberPage === item ? 'selected-paging' : 'unseleted'}`} onClick={() => setNumberPage(item)}>{item}</label>\r\n                ))}\r\n                {numberPage < numberOfPages.length && numberOfPages.length > 1 && <label onClick={() => setNumberPage(pre => pre + 1)} className='btn-paging unseleted'>\r\n                    <AiOutlineRight />\r\n                </label>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(AdminSuppliers)"],"mappings":"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"},"metadata":{},"sourceType":"module"}