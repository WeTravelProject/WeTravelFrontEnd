{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Hoc ReactJS\\\\wetravelfrontend\\\\src\\\\components\\\\pages\\\\PostDetailForum\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './PostDetailForum.scss';\nimport { typePostEnglish, typePostVietnamese } from '../../Languages/ListPostForum';\nimport { english, vietnamese } from '../../Languages/PostDetailForum';\nimport Carousel from 'react-multi-carousel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst responsive = {\n  desktop: {\n    breakpoint: {\n      max: 1920,\n      min: 1080\n    },\n    items: 3,\n    slidesToSlide: 1 // optional, default to 1.\n\n  },\n  tablet: {\n    breakpoint: {\n      max: 1024,\n      min: 464\n    },\n    items: 2,\n    slidesToSlide: 1 // optional, default to 1.\n\n  },\n  mobile: {\n    breakpoint: {\n      max: 464,\n      min: 0\n    },\n    items: 1,\n    slidesToSlide: 1 // optional, default to 1.\n\n  }\n};\n\nfunction PostDetailForum(_ref) {\n  _s();\n\n  let {\n    languageSelected\n  } = _ref;\n  const navigate = useNavigate();\n  const languageTypePost = languageSelected === 'EN' ? typePostEnglish : typePostVietnamese;\n  const languageList = languageSelected === 'EN' ? english : vietnamese;\n\n  const handleClickBtnReply = id => {\n    const element = document.getElementById(id);\n\n    if (element.style.display === 'block') {\n      element.style.display = 'none';\n    } else {\n      element.style.display = 'block';\n      element.scrollIntoView({\n        behavior: 'auto',\n        block: 'center',\n        inline: 'center'\n      });\n    }\n  };\n\n  let anotherPosts = [];\n  listPost.forEach((post, i) => {\n    if (i !== index) {\n      anotherPosts.push(post);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container post-detail\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PostDetailForum, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = PostDetailForum;\nexport default _c2 = /*#__PURE__*/memo(PostDetailForum);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostDetailForum\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useState","useLocation","useNavigate","typePostEnglish","typePostVietnamese","english","vietnamese","Carousel","responsive","desktop","breakpoint","max","min","items","slidesToSlide","tablet","mobile","PostDetailForum","languageSelected","navigate","languageTypePost","languageList","handleClickBtnReply","id","element","document","getElementById","style","display","scrollIntoView","behavior","block","inline","anotherPosts","listPost","forEach","post","i","index","push"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/components/pages/PostDetailForum/index.js"],"sourcesContent":["import { memo, useState } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport './PostDetailForum.scss'\r\nimport { typePostEnglish, typePostVietnamese } from '../../Languages/ListPostForum'\r\nimport { english, vietnamese } from '../../Languages/PostDetailForum'\r\nimport Carousel from 'react-multi-carousel';\r\n\r\nconst responsive = {\r\n    desktop: {\r\n        breakpoint: { max: 1920, min: 1080 },\r\n        items: 3,\r\n        slidesToSlide: 1 // optional, default to 1.\r\n    },\r\n    tablet: {\r\n        breakpoint: { max: 1024, min: 464 },\r\n        items: 2,\r\n        slidesToSlide: 1 // optional, default to 1.\r\n    },\r\n    mobile: {\r\n        breakpoint: { max: 464, min: 0 },\r\n        items: 1,\r\n        slidesToSlide: 1 // optional, default to 1.\r\n    }\r\n};\r\n\r\nfunction PostDetailForum({ languageSelected }) {\r\n    const navigate = useNavigate()\r\n\r\n\r\n\r\n    const languageTypePost = languageSelected === 'EN' ? typePostEnglish : typePostVietnamese\r\n    const languageList = languageSelected === 'EN' ? english : vietnamese\r\n\r\n    const handleClickBtnReply = (id) => {\r\n        const element = document.getElementById(id)\r\n        if (element.style.display === 'block') {\r\n            element.style.display = 'none'\r\n        } else {\r\n            element.style.display = 'block'\r\n            element.scrollIntoView({\r\n                behavior: 'auto',\r\n                block: 'center',\r\n                inline: 'center'\r\n            })\r\n        }\r\n    }\r\n\r\n    let anotherPosts = []\r\n\r\n    listPost.forEach((post, i) => {\r\n        if (i !== index) {\r\n            anotherPosts.push(post)\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className='container post-detail'>\r\n            {/* <img src={post.image} className='w-75 bg-image rotation-0 mt-20 mb-20 image-post-detail' />\r\n            <div className='w-75 bg-white pd-20 main-content-post-detail'>\r\n                <div className='content-post-detail topic-post mb-20'>{languageTypePost[parseInt(post.topic) - 1].label.toUpperCase()}</div>\r\n                <div className='content-post-detail title-post-detail mb-20'>{post.title}</div>\r\n                <div className='content-post-detail d-flex center-horizontal mb-20'>\r\n                    <label className='text-bold mr-20'>{post.accountName}</label>\r\n                    <label className='date-create-post-detail'>{post.dateCreate}</label>\r\n                </div>\r\n                <div className='content-post-detail text-bold'>{post.description}</div>\r\n                <div className='content-post-detail text-left' dangerouslySetInnerHTML={{ __html: post.content }}></div>\r\n                <div className='content-post-detail space-comment'>\r\n                    <div className='input-comment d-flex'>\r\n                        <input type='text' placeholder={languageList.txtComment} className='w-75 input-comment-post-detail' />\r\n                        <button className='btn btn-primary w-25 btn-send-comment'>\r\n                            {languageList.txtSend}\r\n                        </button>\r\n                    </div>\r\n                    {post.comment.map((comment, index) => (\r\n                        <div className='space-each-comment text-left'>\r\n                            <div className='hover-comment'>\r\n                                <div className='title m-0'>\r\n                                    <div className='mark-comment' />\r\n                                    <div className='name-comment'>{comment.name}</div>\r\n                                </div>\r\n                                <input type='date' disabled className='fake-label mb-10 create-date-post-detail' value={comment.createDate} />\r\n                                <div className='m-10 content-word-wrap'>{comment.content}</div>\r\n                                <div className='btn-reply-post-detail' onClick={() => handleClickBtnReply(`reply-input-${index}`)}>{languageList.txtReply}</div>\r\n                            </div>\r\n                            <div className='space-reply mt-20'>\r\n                                {comment.reply.map((reply) => (\r\n                                    <div className='mt-20 hover-reply'>\r\n                                        <div className='title m-0 title-reply'>\r\n                                            <div className='mark-reply' />\r\n                                            <div className='name-comment'>{reply.name}</div>\r\n                                        </div>\r\n                                        <div className='create-date-post-detail date-reply'>{reply.createDate}</div>\r\n                                        <div className='m-10 content-word-wrap content-reply'>{reply.content}</div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <div id={`reply-input-${index}`} className='reply-box'>\r\n                                <div className='d-flex'>\r\n                                    <input type=\"text\" className='reply-input' placeholder={languageList.txtRespondToComments} />\r\n                                    <button className='btn btn-send-reply w-15'>{languageList.txtReply}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className='w-100 bg-white mt-20 bg-another-post'>\r\n                <header className='title text-left'>{languageList.txtAnotherPost}</header>\r\n                <div>\r\n                    <Carousel autoPlay={true}\r\n                        autoPlaySpeed={1500}\r\n                        swipeable={false}\r\n                        showDots={true}\r\n                        draggable={false}\r\n                        responsive={responsive}\r\n                        ssr={true} // means to render carousel on server-side.\r\n                        infinite={true}\r\n                        containerClass=\"carousel-container\"\r\n                        removeArrowOnDeviceType={[\"tablet\", \"mobile\"]}\r\n                        dotListClass=\"custom-dot-list-style\"\r\n                        itemClass=\"carousel-item-padding-40-px\">\r\n                        {anotherPosts.map((item, index) => (\r\n                            <div className='each-post-another' onClick={() => navigate('/forum/post', { state: { post: item, listPost: listPost, index: index } })}>\r\n                                <img src={item.image} className='image-another-post-slide' />\r\n                                <div className='topic-another-post'>{languageTypePost[parseInt(item.topic) - 1].label.toUpperCase()}</div>\r\n                                <div className='title m-0 title-another-post'>{item.title}</div>\r\n                                <div className='title text-left account-name-another-post'>{item.accountName}</div>\r\n                            </div>\r\n                        ))}\r\n                    </Carousel>\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(PostDetailForum)"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,kBAAzC;AACA,OAAO,wBAAP;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,+BAApD;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iCAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAU,GAAG;EACfC,OAAO,EAAE;IACLC,UAAU,EAAE;MAAEC,GAAG,EAAE,IAAP;MAAaC,GAAG,EAAE;IAAlB,CADP;IAELC,KAAK,EAAE,CAFF;IAGLC,aAAa,EAAE,CAHV,CAGY;;EAHZ,CADM;EAMfC,MAAM,EAAE;IACJL,UAAU,EAAE;MAAEC,GAAG,EAAE,IAAP;MAAaC,GAAG,EAAE;IAAlB,CADR;IAEJC,KAAK,EAAE,CAFH;IAGJC,aAAa,EAAE,CAHX,CAGa;;EAHb,CANO;EAWfE,MAAM,EAAE;IACJN,UAAU,EAAE;MAAEC,GAAG,EAAE,GAAP;MAAYC,GAAG,EAAE;IAAjB,CADR;IAEJC,KAAK,EAAE,CAFH;IAGJC,aAAa,EAAE,CAHX,CAGa;;EAHb;AAXO,CAAnB;;AAkBA,SAASG,eAAT,OAA+C;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EAC3C,MAAMC,QAAQ,GAAGjB,WAAW,EAA5B;EAIA,MAAMkB,gBAAgB,GAAGF,gBAAgB,KAAK,IAArB,GAA4Bf,eAA5B,GAA8CC,kBAAvE;EACA,MAAMiB,YAAY,GAAGH,gBAAgB,KAAK,IAArB,GAA4Bb,OAA5B,GAAsCC,UAA3D;;EAEA,MAAMgB,mBAAmB,GAAIC,EAAD,IAAQ;IAChC,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAhB;;IACA,IAAIC,OAAO,CAACG,KAAR,CAAcC,OAAd,KAA0B,OAA9B,EAAuC;MACnCJ,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,MAAxB;IACH,CAFD,MAEO;MACHJ,OAAO,CAACG,KAAR,CAAcC,OAAd,GAAwB,OAAxB;MACAJ,OAAO,CAACK,cAAR,CAAuB;QACnBC,QAAQ,EAAE,MADS;QAEnBC,KAAK,EAAE,QAFY;QAGnBC,MAAM,EAAE;MAHW,CAAvB;IAKH;EACJ,CAZD;;EAcA,IAAIC,YAAY,GAAG,EAAnB;EAEAC,QAAQ,CAACC,OAAT,CAAiB,CAACC,IAAD,EAAOC,CAAP,KAAa;IAC1B,IAAIA,CAAC,KAAKC,KAAV,EAAiB;MACbL,YAAY,CAACM,IAAb,CAAkBH,IAAlB;IACH;EACJ,CAJD;EAMA,oBACI;IAAK,SAAS,EAAC;EAAf;IAAA;IAAA;IAAA;EAAA,QADJ;AAgFH;;GA9GQnB,e;UACYf,W;;;KADZe,e;AAgHT,kCAAelB,IAAI,CAACkB,eAAD,CAAnB"},"metadata":{},"sourceType":"module"}