{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Hoc ReactJS\\\\wetravelfrontend\\\\src\\\\components\\\\Layout\\\\ViewInformationServiceLayout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useContext, useState, useLayoutEffect, useEffect } from 'react';\nimport { OnShowSidebar } from '../AdminHome';\nimport { english, vietnamese } from '../../Languages/OptionInputInformationService';\nimport { useProSidebar } from 'react-pro-sidebar';\nimport ViewInformationServicePending from '../../pages/ViewInformationServicePending';\nimport './ViewInformationServices.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nsessionStorage.setItem('index-service-selected', 1);\n\nfunction ViewInformationServiceLayout(_ref) {\n  _s();\n\n  let {\n    languageSelected\n  } = _ref;\n  const isShowSidebar = useContext(OnShowSidebar);\n  let menuLanguage = languageSelected === 'EN' ? english : vietnamese;\n  const categoryService = sessionStorage.getItem('index-service-selected') - 1;\n  const [optionMenuService, setOptionMenuService] = useState(0);\n  const {\n    collapseSidebar\n  } = useProSidebar();\n\n  const handleClickMenuService = index => {\n    setOptionMenuService(index);\n\n    if (!isShowSidebar) {\n      collapseSidebar();\n    }\n  };\n\n  useLayoutEffect(() => {\n    const contentRight = document.getElementById('main-content-view-service-admin');\n\n    if (isShowSidebar) {\n      contentRight.style.width = '76%';\n    } else {\n      contentRight.style.width = '93.5%';\n    }\n  });\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, [optionMenuService]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `menu-view-service-fixed ${!isShowSidebar && 'menu-hidden'}`,\n      id: \"menu-view-service-fixed\",\n      children: menuLanguage[categoryService].map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClickMenuService(index),\n        className: `option-menu-fixed ${optionMenuService === index && 'selected-menu-service'} ${!isShowSidebar && 'icon-hide-menu-service'}`,\n        children: isShowSidebar ? option : '...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content-view-service-admin\",\n      id: \"main-content-view-service-admin\",\n      children: /*#__PURE__*/_jsxDEV(ViewInformationServicePending, {\n        languageSelected: languageSelected,\n        optionMenuService: optionMenuService\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ViewInformationServiceLayout, \"pBHaUMgy0Pq19K1Cqb6GSqcDYjU=\", false, function () {\n  return [useProSidebar];\n});\n\n_c = ViewInformationServiceLayout;\nexport default _c2 = /*#__PURE__*/memo(ViewInformationServiceLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewInformationServiceLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useContext","useState","useLayoutEffect","useEffect","OnShowSidebar","english","vietnamese","useProSidebar","ViewInformationServicePending","sessionStorage","setItem","ViewInformationServiceLayout","languageSelected","isShowSidebar","menuLanguage","categoryService","getItem","optionMenuService","setOptionMenuService","collapseSidebar","handleClickMenuService","index","contentRight","document","getElementById","style","width","window","scroll","map","option"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/components/Layout/ViewInformationServiceLayout/index.js"],"sourcesContent":["import { memo, useContext, useState, useLayoutEffect, useEffect } from 'react'\r\nimport { OnShowSidebar } from '../AdminHome'\r\nimport { english, vietnamese } from '../../Languages/OptionInputInformationService'\r\nimport { useProSidebar } from 'react-pro-sidebar'\r\nimport ViewInformationServicePending from '../../pages/ViewInformationServicePending'\r\nimport './ViewInformationServices.scss'\r\n\r\nsessionStorage.setItem('index-service-selected', 1)\r\nfunction ViewInformationServiceLayout({ languageSelected }) {\r\n    const isShowSidebar = useContext(OnShowSidebar)\r\n    let menuLanguage = (languageSelected === 'EN' ? english : vietnamese)\r\n    const categoryService = sessionStorage.getItem('index-service-selected') - 1\r\n    const [optionMenuService, setOptionMenuService] = useState(0)\r\n\r\n    const { collapseSidebar } = useProSidebar();\r\n\r\n    const handleClickMenuService = (index) => {\r\n        setOptionMenuService(index)\r\n        if (!isShowSidebar) {\r\n            collapseSidebar()\r\n        }\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        const contentRight = document.getElementById('main-content-view-service-admin')\r\n        if (isShowSidebar) {\r\n            contentRight.style.width = '76%'\r\n        }\r\n        else {\r\n            contentRight.style.width = '93.5%'\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        window.scroll(0, 0)\r\n    }, [optionMenuService])\r\n\r\n    return (\r\n        <>\r\n            <div className={`menu-view-service-fixed ${!isShowSidebar && 'menu-hidden'}`} id='menu-view-service-fixed'>\r\n                {menuLanguage[categoryService].map((option, index) => (\r\n                    <div onClick={() => handleClickMenuService(index)}\r\n                        className={`option-menu-fixed ${optionMenuService === index && 'selected-menu-service'} ${!isShowSidebar && 'icon-hide-menu-service'}`}>\r\n                        {isShowSidebar ? option : '...'}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className='main-content-view-service-admin' id='main-content-view-service-admin'>\r\n                <ViewInformationServicePending languageSelected={languageSelected} optionMenuService={optionMenuService} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ViewInformationServiceLayout)"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,EAAqCC,eAArC,EAAsDC,SAAtD,QAAuE,OAAvE;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,+CAApC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,6BAAP,MAA0C,2CAA1C;AACA,OAAO,gCAAP;;;AAEAC,cAAc,CAACC,OAAf,CAAuB,wBAAvB,EAAiD,CAAjD;;AACA,SAASC,4BAAT,OAA4D;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACxD,MAAMC,aAAa,GAAGb,UAAU,CAACI,aAAD,CAAhC;EACA,IAAIU,YAAY,GAAIF,gBAAgB,KAAK,IAArB,GAA4BP,OAA5B,GAAsCC,UAA1D;EACA,MAAMS,eAAe,GAAGN,cAAc,CAACO,OAAf,CAAuB,wBAAvB,IAAmD,CAA3E;EACA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CjB,QAAQ,CAAC,CAAD,CAA1D;EAEA,MAAM;IAAEkB;EAAF,IAAsBZ,aAAa,EAAzC;;EAEA,MAAMa,sBAAsB,GAAIC,KAAD,IAAW;IACtCH,oBAAoB,CAACG,KAAD,CAApB;;IACA,IAAI,CAACR,aAAL,EAAoB;MAChBM,eAAe;IAClB;EACJ,CALD;;EAOAjB,eAAe,CAAC,MAAM;IAClB,MAAMoB,YAAY,GAAGC,QAAQ,CAACC,cAAT,CAAwB,iCAAxB,CAArB;;IACA,IAAIX,aAAJ,EAAmB;MACfS,YAAY,CAACG,KAAb,CAAmBC,KAAnB,GAA2B,KAA3B;IACH,CAFD,MAGK;MACDJ,YAAY,CAACG,KAAb,CAAmBC,KAAnB,GAA2B,OAA3B;IACH;EACJ,CARc,CAAf;EAUAvB,SAAS,CAAC,MAAM;IACZwB,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiB,CAAjB;EACH,CAFQ,EAEN,CAACX,iBAAD,CAFM,CAAT;EAIA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAG,2BAA0B,CAACJ,aAAD,IAAkB,aAAc,EAA3E;MAA8E,EAAE,EAAC,yBAAjF;MAAA,UACKC,YAAY,CAACC,eAAD,CAAZ,CAA8Bc,GAA9B,CAAkC,CAACC,MAAD,EAAST,KAAT,kBAC/B;QAAK,OAAO,EAAE,MAAMD,sBAAsB,CAACC,KAAD,CAA1C;QACI,SAAS,EAAG,qBAAoBJ,iBAAiB,KAAKI,KAAtB,IAA+B,uBAAwB,IAAG,CAACR,aAAD,IAAkB,wBAAyB,EADzI;QAAA,UAEKA,aAAa,GAAGiB,MAAH,GAAY;MAF9B;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MAAK,SAAS,EAAC,iCAAf;MAAiD,EAAE,EAAC,iCAApD;MAAA,uBACI,QAAC,6BAAD;QAA+B,gBAAgB,EAAElB,gBAAjD;QAAmE,iBAAiB,EAAEK;MAAtF;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA,gBADJ;AAeH;;GA5CQN,4B;UAMuBJ,a;;;KANvBI,4B;AA8CT,kCAAeZ,IAAI,CAACY,4BAAD,CAAnB"},"metadata":{},"sourceType":"module"}