{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Hoc ReactJS\\\\wetravelfrontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { Fragment, useState } from 'react';\nimport { publicRoute } from './routes';\nimport { DefaultLayout } from './components/Layout';\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport { ToastContainer } from 'react-toastify';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let cokkieArr = document.cookie;\n  const [languageSelected, setLanguageSelected] = useState(cokkieArr.split(\"languageSelected=\")[1] ? cokkieArr.split(\"languageSelected=\")[1] : 'EN');\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(ParallaxProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: publicRoute.map((route, index) => {\n            let Layout = DefaultLayout;\n            let image;\n            let role;\n            let changePassword = false;\n\n            if (route.layout) {\n              Layout = route.layout;\n            } else if (route.layout === null) {\n              Layout = Fragment;\n            }\n\n            if (route.image !== null) {\n              image = route.image;\n            }\n\n            if (route.role !== null) {\n              role = route.role;\n            }\n\n            if (route.changePassword) {\n              changePassword = true;\n            }\n\n            const Page = route.component;\n            return /*#__PURE__*/_jsxDEV(Route, {\n              path: route.path,\n              element: /*#__PURE__*/_jsxDEV(Layout, {\n                changePassword: changePassword,\n                languageSelected: languageSelected,\n                setLanguageSelected: setLanguageSelected,\n                image: image,\n                children: /*#__PURE__*/_jsxDEV(Page, {\n                  languageSelected: languageSelected,\n                  role: role\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 26\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Kr2MlwVex8URxe4V9YgTfqiJWAg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Fragment","useState","publicRoute","DefaultLayout","ParallaxProvider","ToastContainer","App","cokkieArr","document","cookie","languageSelected","setLanguageSelected","split","map","route","index","Layout","image","role","changePassword","layout","Page","component","path"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\r\nimport { Fragment, useState } from 'react';\r\nimport { publicRoute } from './routes'\r\nimport { DefaultLayout } from './components/Layout';\r\nimport { ParallaxProvider } from 'react-scroll-parallax';\r\nimport { ToastContainer } from 'react-toastify'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport 'bootstrap/dist/js/bootstrap.bundle'\r\n\r\nfunction App() {\r\n\r\n\r\n\r\n  let cokkieArr = document.cookie;\r\n\r\n  const [languageSelected, setLanguageSelected] = useState((cokkieArr.split(\"languageSelected=\")[1] ? cokkieArr.split(\"languageSelected=\")[1] : 'EN'))\r\n\r\n  return (\r\n    <Router>\r\n      <ParallaxProvider>\r\n        <div className=\"App\">\r\n\r\n          <Routes>\r\n            {publicRoute.map((route, index) => {\r\n              let Layout = DefaultLayout;\r\n              let image;\r\n              let role;\r\n              let changePassword = false;\r\n\r\n              if (route.layout) { Layout = route.layout }\r\n              else if (route.layout === null) { Layout = Fragment }\r\n\r\n              if (route.image !== null) { image = route.image }\r\n\r\n              if (route.role !== null) { role = route.role }\r\n\r\n              if (route.changePassword) { changePassword = true }\r\n\r\n              const Page = route.component\r\n              return <Route key={index}\r\n                path={route.path}\r\n                element={<Layout changePassword={changePassword} languageSelected={languageSelected} setLanguageSelected={setLanguageSelected} image={image}>\r\n                  <Page languageSelected={languageSelected} role={role} />\r\n                </Layout>} />\r\n            })}\r\n          </Routes>\r\n        </div>\r\n      </ParallaxProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,UAA5B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,gBAAT,QAAiC,uBAAjC;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAO,sCAAP;AACA,OAAO,oCAAP;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAIb,IAAIC,SAAS,GAAGC,QAAQ,CAACC,MAAzB;EAEA,MAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,QAAQ,CAAEM,SAAS,CAACK,KAAV,CAAgB,mBAAhB,EAAqC,CAArC,IAA0CL,SAAS,CAACK,KAAV,CAAgB,mBAAhB,EAAqC,CAArC,CAA1C,GAAoF,IAAtF,CAAxD;EAEA,oBACE,QAAC,MAAD;IAAA,uBACE,QAAC,gBAAD;MAAA,uBACE;QAAK,SAAS,EAAC,KAAf;QAAA,uBAEE,QAAC,MAAD;UAAA,UACGV,WAAW,CAACW,GAAZ,CAAgB,CAACC,KAAD,EAAQC,KAAR,KAAkB;YACjC,IAAIC,MAAM,GAAGb,aAAb;YACA,IAAIc,KAAJ;YACA,IAAIC,IAAJ;YACA,IAAIC,cAAc,GAAG,KAArB;;YAEA,IAAIL,KAAK,CAACM,MAAV,EAAkB;cAAEJ,MAAM,GAAGF,KAAK,CAACM,MAAf;YAAuB,CAA3C,MACK,IAAIN,KAAK,CAACM,MAAN,KAAiB,IAArB,EAA2B;cAAEJ,MAAM,GAAGhB,QAAT;YAAmB;;YAErD,IAAIc,KAAK,CAACG,KAAN,KAAgB,IAApB,EAA0B;cAAEA,KAAK,GAAGH,KAAK,CAACG,KAAd;YAAqB;;YAEjD,IAAIH,KAAK,CAACI,IAAN,KAAe,IAAnB,EAAyB;cAAEA,IAAI,GAAGJ,KAAK,CAACI,IAAb;YAAmB;;YAE9C,IAAIJ,KAAK,CAACK,cAAV,EAA0B;cAAEA,cAAc,GAAG,IAAjB;YAAuB;;YAEnD,MAAME,IAAI,GAAGP,KAAK,CAACQ,SAAnB;YACA,oBAAO,QAAC,KAAD;cACL,IAAI,EAAER,KAAK,CAACS,IADP;cAEL,OAAO,eAAE,QAAC,MAAD;gBAAQ,cAAc,EAAEJ,cAAxB;gBAAwC,gBAAgB,EAAET,gBAA1D;gBAA4E,mBAAmB,EAAEC,mBAAjG;gBAAsH,KAAK,EAAEM,KAA7H;gBAAA,uBACP,QAAC,IAAD;kBAAM,gBAAgB,EAAEP,gBAAxB;kBAA0C,IAAI,EAAEQ;gBAAhD;kBAAA;kBAAA;kBAAA;gBAAA;cADO;gBAAA;gBAAA;gBAAA;cAAA;YAFJ,GAAYH,KAAZ;cAAA;cAAA;cAAA;YAAA,QAAP;UAKD,CArBA;QADH;UAAA;UAAA;UAAA;QAAA;MAFF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD;;GAzCQT,G;;KAAAA,G;AA2CT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}