{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\Hoc ReactJS\\\\wetravelfrontend\\\\src\\\\components\\\\Layout\\\\ViewInformationServiceLayout\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { memo, useContext, useState } from 'react';\nimport { OnShowSidebar } from '../AdminHome';\nimport { english, vietnamese } from '../../Languages/OptionInputInformationService';\nimport { useProSidebar } from 'react-pro-sidebar';\nimport './ViewInformationServices.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nsessionStorage.setItem('index-service-selected', 1);\n\nfunction ViewInformationServiceLayout(_ref) {\n  _s();\n\n  let {\n    languageSelected\n  } = _ref;\n  const isShowSidebar = useContext(OnShowSidebar);\n  let menuLanguage = languageSelected === 'EN' ? english : vietnamese;\n  const categoryService = sessionStorage.getItem('index-service-selected') - 1;\n  const [optionMenuService, setOptionMenuService] = useState(0);\n  const {\n    collapseSidebar\n  } = useProSidebar();\n\n  const handleClickMenuService = index => {\n    setOptionMenuService(index);\n\n    if (isShowSidebar) {\n      collapseSidebar();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `menu-view-service-fixed ${isShowSidebar && 'menu-hidden'}`,\n      children: menuLanguage[categoryService].map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleClickMenuService(index),\n        className: `option-menu-fixed ${optionMenuService === index && 'selected-menu-service'} ${isShowSidebar && 'icon-hide-menu-service'}`,\n        children: !isShowSidebar ? option : '...'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewInformationServiceLayout, \"5Fm7XVNPZXpBTaZvpPoedGjEQtg=\", false, function () {\n  return [useProSidebar];\n});\n\n_c = ViewInformationServiceLayout;\nexport default _c2 = /*#__PURE__*/memo(ViewInformationServiceLayout);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ViewInformationServiceLayout\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useContext","useState","OnShowSidebar","english","vietnamese","useProSidebar","sessionStorage","setItem","ViewInformationServiceLayout","languageSelected","isShowSidebar","menuLanguage","categoryService","getItem","optionMenuService","setOptionMenuService","collapseSidebar","handleClickMenuService","index","map","option"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/components/Layout/ViewInformationServiceLayout/index.js"],"sourcesContent":["import { memo, useContext, useState } from 'react'\r\nimport { OnShowSidebar } from '../AdminHome'\r\nimport { english, vietnamese } from '../../Languages/OptionInputInformationService'\r\nimport { useProSidebar } from 'react-pro-sidebar'\r\nimport './ViewInformationServices.scss'\r\n\r\nsessionStorage.setItem('index-service-selected', 1)\r\nfunction ViewInformationServiceLayout({ languageSelected }) {\r\n    const isShowSidebar = useContext(OnShowSidebar)\r\n    let menuLanguage = (languageSelected === 'EN' ? english : vietnamese)\r\n    const categoryService = sessionStorage.getItem('index-service-selected') - 1\r\n    const [optionMenuService, setOptionMenuService] = useState(0)\r\n\r\n    const { collapseSidebar } = useProSidebar();\r\n\r\n    const handleClickMenuService = (index) => {\r\n        setOptionMenuService(index)\r\n        if(isShowSidebar){\r\n            collapseSidebar()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={`menu-view-service-fixed ${isShowSidebar && 'menu-hidden'}`}>\r\n                {menuLanguage[categoryService].map((option, index) => (\r\n                    <div onClick={() => handleClickMenuService(index)}\r\n                        className={`option-menu-fixed ${optionMenuService === index && 'selected-menu-service'} ${isShowSidebar && 'icon-hide-menu-service'}`}>\r\n                        {!isShowSidebar ? option : '...'}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ViewInformationServiceLayout)"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,+CAApC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAO,gCAAP;;AAEAC,cAAc,CAACC,OAAf,CAAuB,wBAAvB,EAAiD,CAAjD;;AACA,SAASC,4BAAT,OAA4D;EAAA;;EAAA,IAAtB;IAAEC;EAAF,CAAsB;EACxD,MAAMC,aAAa,GAAGV,UAAU,CAACE,aAAD,CAAhC;EACA,IAAIS,YAAY,GAAIF,gBAAgB,KAAK,IAArB,GAA4BN,OAA5B,GAAsCC,UAA1D;EACA,MAAMQ,eAAe,GAAGN,cAAc,CAACO,OAAf,CAAuB,wBAAvB,IAAmD,CAA3E;EACA,MAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,CAAD,CAA1D;EAEA,MAAM;IAAEe;EAAF,IAAsBX,aAAa,EAAzC;;EAEA,MAAMY,sBAAsB,GAAIC,KAAD,IAAW;IACtCH,oBAAoB,CAACG,KAAD,CAApB;;IACA,IAAGR,aAAH,EAAiB;MACbM,eAAe;IAClB;EACJ,CALD;;EAOA,oBACI;IAAA,wBACI;MAAK,SAAS,EAAG,2BAA0BN,aAAa,IAAI,aAAc,EAA1E;MAAA,UACKC,YAAY,CAACC,eAAD,CAAZ,CAA8BO,GAA9B,CAAkC,CAACC,MAAD,EAASF,KAAT,kBAC/B;QAAK,OAAO,EAAE,MAAMD,sBAAsB,CAACC,KAAD,CAA1C;QACI,SAAS,EAAG,qBAAoBJ,iBAAiB,KAAKI,KAAtB,IAA+B,uBAAwB,IAAGR,aAAa,IAAI,wBAAyB,EADxI;QAAA,UAEK,CAACA,aAAD,GAAiBU,MAAjB,GAA0B;MAF/B;QAAA;QAAA;QAAA;MAAA,QADH;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eASI;MAAA;MAAA;MAAA;IAAA,QATJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GA9BQZ,4B;UAMuBH,a;;;KANvBG,4B;AAgCT,kCAAeT,IAAI,CAACS,4BAAD,CAAnB"},"metadata":{},"sourceType":"module"}