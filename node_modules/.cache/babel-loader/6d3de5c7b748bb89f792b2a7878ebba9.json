{"ast":null,"code":"function Momo(rawRequestId, rawOrderInfo, rawAmount) {\n  //https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\n  //parameters\n  var partnerCode = \"MOMOFHZ620220926\";\n  var accessKey = \"kujPw2Rq6sYwA8bW\";\n  var secretkey = \"kwaXkpLQ0EfpqcfNQmdEDrBj7XdMgojS\";\n  var requestId = rawRequestId;\n  var orderId = requestId;\n  var orderInfo = rawOrderInfo;\n  var redirectUrl = \"http://localhost:3000/afterpay\";\n  var ipnUrl = \"http://localhost:3000/afterpay\"; // var ipnUrl = redirectUrl = \"https://webhook.site/454e7b77-f177-4ece-8236-ddf1c26ba7f8\";\n\n  var amount = rawAmount;\n  var requestType = \"captureWallet\";\n  var extraData = \"\"; //pass empty value if your merchant does not have stores\n  //before sign HMAC SHA256 with format\n  //accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\n\n  var rawSignature = \"accessKey=\" + accessKey + \"&amount=\" + amount + \"&extraData=\" + extraData + \"&ipnUrl=\" + ipnUrl + \"&orderId=\" + orderId + \"&orderInfo=\" + orderInfo + \"&partnerCode=\" + partnerCode + \"&redirectUrl=\" + redirectUrl + \"&requestId=\" + requestId + \"&requestType=\" + requestType; //puts raw signature\n  //signature\n\n  const crypto = require('crypto');\n\n  var signature = crypto.createHmac('sha256', secretkey).update(rawSignature).digest('hex'); //json object send to MoMo endpoint\n\n  const requestBody = JSON.stringify({\n    partnerCode: partnerCode,\n    accessKey: accessKey,\n    requestId: requestId,\n    amount: amount,\n    orderId: orderId,\n    orderInfo: orderInfo,\n    redirectUrl: redirectUrl,\n    ipnUrl: ipnUrl,\n    extraData: extraData,\n    requestType: requestType,\n    signature: signature,\n    lang: 'en'\n  }); //Create the HTTPS objects\n\n  const https = require('https');\n\n  const options = {\n    hostname: 'test-payment.momo.vn',\n    port: 443,\n    path: '/v2/gateway/api/create',\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Content-Length': Buffer.byteLength(requestBody)\n    }\n  }; //Send the request and get the response\n\n  const req = https.request(options, res => {\n    res.setEncoding('utf8');\n    res.on('data', body => {\n      window.location.href = JSON.parse(body).payUrl;\n    });\n    res.on('end', () => {});\n  });\n  req.on('error', e => {}); // write data to request body\n\n  req.write(requestBody);\n  req.end();\n}\n\n_c = Momo;\nexport default Momo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Momo\");","map":{"version":3,"names":["Momo","rawRequestId","rawOrderInfo","rawAmount","partnerCode","accessKey","secretkey","requestId","orderId","orderInfo","redirectUrl","ipnUrl","amount","requestType","extraData","rawSignature","crypto","require","signature","createHmac","update","digest","requestBody","JSON","stringify","lang","https","options","hostname","port","path","method","headers","Buffer","byteLength","req","request","res","setEncoding","on","body","window","location","href","parse","payUrl","e","write","end"],"sources":["C:/Users/ADMIN/Desktop/Hoc ReactJS/wetravelfrontend/src/components/pages/Momo/index.js"],"sourcesContent":["function Momo(rawRequestId, rawOrderInfo, rawAmount) {\r\n\r\n    //https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\r\n    //parameters\r\n    var partnerCode = \"MOMOFHZ620220926\";\r\n    var accessKey = \"kujPw2Rq6sYwA8bW\";\r\n    var secretkey = \"kwaXkpLQ0EfpqcfNQmdEDrBj7XdMgojS\";\r\n    var requestId = rawRequestId;\r\n    var orderId = requestId;\r\n    var orderInfo = rawOrderInfo;\r\n    var redirectUrl = \"http://localhost:3000/afterpay\";\r\n    var ipnUrl = \"http://localhost:3000/afterpay\";\r\n    // var ipnUrl = redirectUrl = \"https://webhook.site/454e7b77-f177-4ece-8236-ddf1c26ba7f8\";\r\n    var amount = rawAmount;\r\n    var requestType = \"captureWallet\"\r\n    var extraData = \"\"; //pass empty value if your merchant does not have stores\r\n\r\n    //before sign HMAC SHA256 with format\r\n    //accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\r\n    var rawSignature = \"accessKey=\" + accessKey + \"&amount=\" + amount + \"&extraData=\" + extraData + \"&ipnUrl=\" + ipnUrl + \"&orderId=\" + orderId + \"&orderInfo=\" + orderInfo + \"&partnerCode=\" + partnerCode + \"&redirectUrl=\" + redirectUrl + \"&requestId=\" + requestId + \"&requestType=\" + requestType\r\n    //puts raw signature\r\n    //signature\r\n    const crypto = require('crypto');\r\n    var signature = crypto.createHmac('sha256', secretkey)\r\n        .update(rawSignature)\r\n        .digest('hex');\r\n\r\n    //json object send to MoMo endpoint\r\n    const requestBody = JSON.stringify({\r\n        partnerCode: partnerCode,\r\n        accessKey: accessKey,\r\n        requestId: requestId,\r\n        amount: amount,\r\n        orderId: orderId,\r\n        orderInfo: orderInfo,\r\n        redirectUrl: redirectUrl,\r\n        ipnUrl: ipnUrl,\r\n        extraData: extraData,\r\n        requestType: requestType,\r\n        signature: signature,\r\n        lang: 'en'\r\n    });\r\n    //Create the HTTPS objects\r\n    const https = require('https');\r\n    const options = {\r\n        hostname: 'test-payment.momo.vn',\r\n        port: 443,\r\n        path: '/v2/gateway/api/create',\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Content-Length': Buffer.byteLength(requestBody)\r\n        }\r\n    }\r\n\r\n    //Send the request and get the response\r\n    const req = https.request(options, res => {\r\n        res.setEncoding('utf8');\r\n        res.on('data', (body) => {\r\n            window.location.href = JSON.parse(body).payUrl\r\n        });\r\n        res.on('end', () => {\r\n\r\n        });\r\n    })\r\n\r\n    req.on('error', (e) => {\r\n\r\n    });\r\n    // write data to request body\r\n    req.write(requestBody);\r\n    req.end();\r\n}\r\n\r\nexport default Momo;"],"mappings":"AAAA,SAASA,IAAT,CAAcC,YAAd,EAA4BC,YAA5B,EAA0CC,SAA1C,EAAqD;EAEjD;EACA;EACA,IAAIC,WAAW,GAAG,kBAAlB;EACA,IAAIC,SAAS,GAAG,kBAAhB;EACA,IAAIC,SAAS,GAAG,kCAAhB;EACA,IAAIC,SAAS,GAAGN,YAAhB;EACA,IAAIO,OAAO,GAAGD,SAAd;EACA,IAAIE,SAAS,GAAGP,YAAhB;EACA,IAAIQ,WAAW,GAAG,gCAAlB;EACA,IAAIC,MAAM,GAAG,gCAAb,CAXiD,CAYjD;;EACA,IAAIC,MAAM,GAAGT,SAAb;EACA,IAAIU,WAAW,GAAG,eAAlB;EACA,IAAIC,SAAS,GAAG,EAAhB,CAfiD,CAe7B;EAEpB;EACA;;EACA,IAAIC,YAAY,GAAG,eAAeV,SAAf,GAA2B,UAA3B,GAAwCO,MAAxC,GAAiD,aAAjD,GAAiEE,SAAjE,GAA6E,UAA7E,GAA0FH,MAA1F,GAAmG,WAAnG,GAAiHH,OAAjH,GAA2H,aAA3H,GAA2IC,SAA3I,GAAuJ,eAAvJ,GAAyKL,WAAzK,GAAuL,eAAvL,GAAyMM,WAAzM,GAAuN,aAAvN,GAAuOH,SAAvO,GAAmP,eAAnP,GAAqQM,WAAxR,CAnBiD,CAoBjD;EACA;;EACA,MAAMG,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;EACA,IAAIC,SAAS,GAAGF,MAAM,CAACG,UAAP,CAAkB,QAAlB,EAA4Bb,SAA5B,EACXc,MADW,CACJL,YADI,EAEXM,MAFW,CAEJ,KAFI,CAAhB,CAvBiD,CA2BjD;;EACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;IAC/BpB,WAAW,EAAEA,WADkB;IAE/BC,SAAS,EAAEA,SAFoB;IAG/BE,SAAS,EAAEA,SAHoB;IAI/BK,MAAM,EAAEA,MAJuB;IAK/BJ,OAAO,EAAEA,OALsB;IAM/BC,SAAS,EAAEA,SANoB;IAO/BC,WAAW,EAAEA,WAPkB;IAQ/BC,MAAM,EAAEA,MARuB;IAS/BG,SAAS,EAAEA,SAToB;IAU/BD,WAAW,EAAEA,WAVkB;IAW/BK,SAAS,EAAEA,SAXoB;IAY/BO,IAAI,EAAE;EAZyB,CAAf,CAApB,CA5BiD,CA0CjD;;EACA,MAAMC,KAAK,GAAGT,OAAO,CAAC,OAAD,CAArB;;EACA,MAAMU,OAAO,GAAG;IACZC,QAAQ,EAAE,sBADE;IAEZC,IAAI,EAAE,GAFM;IAGZC,IAAI,EAAE,wBAHM;IAIZC,MAAM,EAAE,MAJI;IAKZC,OAAO,EAAE;MACL,gBAAgB,kBADX;MAEL,kBAAkBC,MAAM,CAACC,UAAP,CAAkBZ,WAAlB;IAFb;EALG,CAAhB,CA5CiD,CAuDjD;;EACA,MAAMa,GAAG,GAAGT,KAAK,CAACU,OAAN,CAAcT,OAAd,EAAuBU,GAAG,IAAI;IACtCA,GAAG,CAACC,WAAJ,CAAgB,MAAhB;IACAD,GAAG,CAACE,EAAJ,CAAO,MAAP,EAAgBC,IAAD,IAAU;MACrBC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBpB,IAAI,CAACqB,KAAL,CAAWJ,IAAX,EAAiBK,MAAxC;IACH,CAFD;IAGAR,GAAG,CAACE,EAAJ,CAAO,KAAP,EAAc,MAAM,CAEnB,CAFD;EAGH,CARW,CAAZ;EAUAJ,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAiBO,CAAD,IAAO,CAEtB,CAFD,EAlEiD,CAqEjD;;EACAX,GAAG,CAACY,KAAJ,CAAUzB,WAAV;EACAa,GAAG,CAACa,GAAJ;AACH;;KAxEQhD,I;AA0ET,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}